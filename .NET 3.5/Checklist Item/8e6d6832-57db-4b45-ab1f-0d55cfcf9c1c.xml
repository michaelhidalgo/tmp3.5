<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="-926112799" Content_Hash="-720749867">
  <Metadata>
    <Id>8e6d6832-57db-4b45-ab1f-0d55cfcf9c1c</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>リダイレクトとフォワードにはマッピング値が使用されている</Title>
    <Category>入力とデータの検証</Category>
    <Phase>実装</Phase>
    <Technology>Web アプリケーション</Technology>
    <Type>チェックリスト項目</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>適用対象</h1>
  <ul>
    <li>Web アプリケーション</li>
  </ul>
  <h1>チェック対象</h1>
  <p>リダイレクトとフォワードの宛先を決定するために、マッピング値が使用されていることを確認します。</p>
  <h1>理由</h1>
  <p>リダイレクトとフォワードの実行にマッピング値を使用すると、悪意のあるユーザーが、リダイレクトまたはフォワードを使用して、アプリケーションの設計で意図された以外のページを指すハイパーリングを作成するのを防止できます。</p>
  <h1>チェック方法</h1>
  <p>マッピング値がリダイレクトとフォワードに使用されていることを次の手順で確認します。</p>
  <ol>
    <li>
      <p>
        <strong>リダイレクトと転送を特定します。</strong> コードをレビューして、リダイレクトと転送をすべて見つけます。</p>
      <li>
        <p>
          <strong>リダイレクトとフォワードを検査します。</strong> パラメータを扱うコードを探します。 このコードが、リダイレクトまたはフォワードの宛先計算に、完全修飾された URL を入力として受け入れないことを確認します。 リダイレクトまたはフォワードの宛先計算にパラメータが使用される場合は、アプリケーションによって定義された略記キーワードだけが、有効で承認された宛先にマッピングするための入力値として受け入れられることを確認します。</p>
      </li>
    </li>
  </ol>
  <h1>修正方法</h1>
  <p>マッピング値に基づいたリダイレクトとフォワードの宛先を計算するために、次のアクションを実行します。</p>
  <ol>
    <li>
      <p>
        <strong>リダイレクトと転送を特定します。</strong> コードをレビューして、リダイレクトと転送をすべて見つけます。</p>
      <li>
        <p>
          <strong>宛先を列挙します。</strong> リダイレクトとフォワードによって指示される宛先すべてのリストを作成します。</p>
        <li>
          <p>
            <strong>マッピング値を定義します。</strong> リダイレクトと転送で使用されるすべての宛先にマッピング値を定義します。 マッピング値は、リソースを象徴的に表している、識別用の短い文字列です。</p>
          <li>
            <p>
              <strong>リダイレクトとフォワードを書き直します。</strong> 入力としてマッピング値を使用して、リダイレクトまたは転送の最終的な宛先を計算するようにリダイレクトと転送を書き換えます。</p>
          </li>
        </li>
      </li>
    </li>
  </ol>
  <h1>問題の例</h1>
  <p>次に、リダイレクトが安全ではないオンライン バンキング アプリケーションについて考えてみます。</p>
  <pre>http://www.onlinebank.com/redirect.asp?url=[destination]</pre>
  <p>フィッシング詐欺の実行者は、自分のサイトに向けた次のようなハイパーリンクを作成し、それをスパム メッセージを利用して、何百万という人々に送信します。</p>
  <pre>http://www.onlinebank.com/redirect.asp?url=www.phisher.com</pre>
  <p>ユーザーは、電子メールのメッセージの中に、自分の銀行 (onlinebank.com) を示していると思われるリンクを発見し、そのリンクをクリックします。そうすると、自分の銀行のサイトとまったく同じように見える Web サイトが表示されますが、実際は認証 Credential 情報を盗むために作成されたフィッシング Web サイトなのです。 ユーザーは、自分の口座番号と PIN をその Web ページに入力します。そうすると、エラー メッセージが表示され、再度入力するように指示されます。そして、銀行の本物のサイトにリダイレクトされます。 資格情報を再び入力した後に、ユーザーはアカウントの表示に成功します。 ただし、フィッシング詐欺の実行者は、すでにこのユーザーのオンライン バンキング情報を手に入れているのです。</p>
  <h1>ソリューションの例</h1>
  <p>最も単純なソリューションはリダイレクトを完全に排除することですが、アプリケーションの設計上必要な場合は、この脆弱性を緩和するためにマッピング値が使用されます。 たとえば、balance.asp にリダイレクトするためにアプリケーションが redirect.asp を使用している場合、balance.asp を示すために「balance」と呼ばれるマッピング値を作成します。 redirect.asp のページは、URL ではなく、マッピング値を入力として受け取るように書き直す必要があります。 そして、以下の&amp;nbsp;URLはbalance.aspへ転送されなければなりません。</p>
  <pre>http://www.onlinebank.com/redirect.asp?map=balance</pre>
  <p>しかし、次の悪意のあるハイパーリンクはもう機能しません。この入力は、アプリケーションで定義されたどのマッピング値にも一致しないからです。</p>
  <pre>http://www.onlinebank.com/redirect.asp?url=www.phisher.com</pre>
  <h1>その他のリソース</h1>
  <ul>
    <li>リダイレクトまたはフォワードの無効化に関する詳細は、次を参照してください。<a href="http://www.owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards">http://www.owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards</a></li>
  </ul>
  <h1>関連する項目</h1>
  <ul>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>