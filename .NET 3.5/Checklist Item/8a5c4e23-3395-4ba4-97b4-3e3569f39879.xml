<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="2023232138" Content_Hash="1951570748">
  <Metadata>
    <Id>8a5c4e23-3395-4ba4-97b4-3e3569f39879</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>適切な鍵サイズの使用。</Title>
    <Category>暗号化</Category>
    <Phase>実装</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>チェックリスト項目</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>チェック対象</h1>
  <p>アプリケーションで、暗号アルゴリズムに基づいて適切な鍵サイズが使用されていることを確認します。</p>
  <p />
  <h1>修正方法</h1>
  <p>鍵サイズを選択することは、パフォーマンスとセキュリティ間のトレードオフを表しています。 小さすぎる鍵を選択すると、よく保護されていると思われたデータが攻撃に対して脆弱になることがあります。 大きすぎる鍵を選択すると、システムは、現実世界における相応のセキュリティの改善がないにもかかわらず、パフォーマンスの影響を受けることになります。 適切な鍵サイズは、使用中の暗号アルゴリズムに基づいて変更され、またマシンの処理速度が増加し、攻撃手法がより高度化するにつれて時間と共に変化します。 次の推奨事項は、パフォーマンスを過度に犠牲にすることなく、安全域を与えてくれます：</p>
  <ul>
    <li>非対称アルゴリズムとして RSA を使用する場合は、2048 ビットの鍵を選択する<li>対称アルゴリズムとして AES を使用する場合は、128 ビットの鍵を選択する<li>他のアルゴリズムは他の鍵サイズを持つことになります。 Microsoft からの最新の推奨事項については、   - <a href="http://msdn.microsoft.com/en-us/library/aa379916(VS.85).aspx">http://msdn.microsoft.com/en-us/library/aa379916(VS.85).aspx にて MSDN の CryptDeriveKey 機能定義をご覧ください。</a></li></li></li>
  </ul>
  <hr />
  <p>出典: Microsoft patterns & practices guidance</p>]]></Data>
  </Content>
</TeamMentor_Article>