<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="-2065333840" Content_Hash="272043732">
  <Metadata>
    <Id>5b3ce05c-80cd-4452-ad01-8a6a5e6627f5</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>SQL インジェクションを防止するため、入力を検証し、パラメータ化したストアド プロシージャを使用する</Title>
    <Category>データ アクセス</Category>
    <Phase>実装</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>チェックリスト項目</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>チェック対象</h1>
  <p>入力を検証し、パラメータ化されたストアド プロシージャを使用して、SQL インジェクションを防止するようにする。</p>
  <p />
  <h1>修正方法</h1>
  <p>SQL インジェクションを防止するには、入力を検証し、パラメータ化されたストアド プロシージャを使用してデータ アクセスする必要があります。 パラメータ (例: <b>SqlParameterCollection</b>) を使用することで、入力の種類と長さがチェックされ、範囲外の値では例外がスローされます。 また、パラメータは、安全なリテラル値として扱われ、データベース内の実行可能コードとしては扱われません。 次のコードは、ストアド プロシージャを呼び出す時の <b>SqlParameterCollection</b> の使用方法を示しています。</p>
  <div>
 <pre>using System.Data;<br />using System.Data.SqlClient;<br />using (SqlConnection connection = new SqlConnection(connectionString)){<br />  DataSet userDataset = new DataSet();<br />  SqlDataAdapter myCommand = new SqlDataAdapter(<br />              "LoginStoredProcedure", connection);<br />  myCommand.SelectCommand.CommandType = CommandType.StoredProcedure;<br />  myCommand.SelectCommand.Parameters.Add("@au_id", SqlDbType.VarChar, 11);<br />  myCommand.SelectCommand.Parameters["@au_id"].Value = SSN.Text;<br />  myCommand.Fill(userDataset);<br />}  </pre>
  </div>
  <p>単独のパラメータを実行可能なクエリとして受け入れるストアド プロシージャは避けます。 その代わりに､複数のクエリ パラメータのみを渡すようにします。</p>
  <p>構造化例外処理を使用して、データベースへのアクセス中に発生したエラーをキャッチし、それらのエラーがクライアントへ戻らないようにします。 詳細なエラー メッセージによって、接続文字列、SQL Server 名、またはテーブルやデータベースの命名規則のような貴重な情報が開示する可能性があります。 攻撃者は、この情報を使用してより正確な攻撃を構築できます。</p>
  <p>追加の予防策として、最小限の特権アカウントを使用してデータベースにアクセスすることで、アプリケーションが攻撃を受けた場合の影響を軽減することができます。</p>
  <hr />
  <p>出典: Microsoft patterns & practices guidance</p>]]></Data>
  </Content>
</TeamMentor_Article>