<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="-456836481" Content_Hash="-1882599267">
  <Metadata>
    <Id>678d7416-97ab-48bf-b24e-6b6cb80e5e64</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>最小限の特権付きサービス アカウントが ASP.NET アプリケーションの実行に使用される</Title>
    <Category>展開の考慮事項</Category>
    <Phase>展開</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>チェックリスト項目</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>チェック対象</h1>
  <p>お使いのアプリケーションで、最小限の特権付きサービス アカウントが ASP.NET アプリケーションの実行に使用されていることを確認してください。</p>
  <h1>修正方法</h1>
  <p>IIS 5 では、ASP.NET Web アプリケーションは、デフォルトで最小限の特権付き ASPNET アカウントを使用して実行されます。 IIS 6 以降では、ASP.NET Web アプリケーションは、最小限の特権付き Network Service アカウントを使用したアプリケーション プール内で実行されます。 カスタム サービス アカウントを使用して ASP.NET Web アプリケーションを実行する必要がある場合は、最小限の特権付きアカウントを作成してください。 カスタム サービス アカウントを作成して、お使いのアプリケーションを同一サーバ上にある別のアプリケーションから分離したり、各アプリケーションの監査を別々に行ったりできるようにする必要があるかもしれません。 </p>
  <p>
    <b>最小限の特権付きアカウントを作成するには</b>
  </p>
  <ol>
    <li>
      <p>ローカルまたはドメインの Windows アカウントを作成します。 </p>
      <li>
        <p />次の Aspnet_regiis.exe コマンドを実行して、関連する ASP.NET アクセス許可をアカウントに割り当てます:<p><b>aspnet_regiis.exe -ga machineName\userName</b></p><p>Windows Server 2003 以降では、Aspnet_regiis.exe -ga を実行すると IIS_WPG グループにアカウントが追加されます。 IIS_WPGグループでは、「<b>バッチ ジョブとしてログオンする</b>」というユーザー権限が提供され、必要なファイル システムのアクセス許可が与えられます。 </p><li><p>[ローカル セキュリティ ポリシー] ツールを使用して、Windows アカウントに「<b>ローカルのログオンを拒否する</b>」というユーザー権限を与えます。 こうすることで、アカウントの特権が減少し、すべてのユーザーがアカウントを用いてローカルで Windows にログオンすることができなくなります。 </p><li><p>IIS マネージャを使用して、新規アカウントの ID のもとで実行されるアプリケーション プールを作成し、ASP.NET アプリケーションをプールに割り当てます。<b></b></p></li></li></li>
    </li>
  </ol>
  <hr />
  <p>出典: Microsoft patterns & practices guidance </p>]]></Data>
  </Content>
</TeamMentor_Article>