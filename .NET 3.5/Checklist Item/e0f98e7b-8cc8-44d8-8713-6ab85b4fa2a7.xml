<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="1164206833" Content_Hash="-1085640395">
  <Metadata>
    <Id>e0f98e7b-8cc8-44d8-8713-6ab85b4fa2a7</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>遅延署名は、私有鍵攻撃の機会を減らす、もしくはチーム全体で単一の公開鍵を使用することを可能にするため使用されます。</Title>
    <Category>強力な命名および署名</Category>
    <Phase>実装</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>チェックリスト項目</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>チェック対象</h1>
  <p>アプリケーションが、私有鍵攻撃の機会を減らす、もしくはチーム全体で単一の公開鍵を使用することを可能にするために、遅延署名を使用することを確認してください。</p>
  <p />
  <h1>修正方法</h1>
  <p>プロジェクトに2 、3 名以上の開発者がいるか、または日常のビルドで生成されるアセンブリに簡単に署名できるようにするような日常のビルド プロセスがある時には、遅延署名の使用を検討することをお勧めします。 これら条件のいずれかに相当しない場合でも、私有鍵が極端に機微なものの場合は遅延署名の使用を検討することをお勧めします: 例えば、企業の数千のデスクトップ全体にわたり、私有鍵に基づく信用決定を行う場合です。</p>
  <p>遅延署名は公開鍵をアセンブリに置きます、これはコード アクセス セキュリティ ポリシーに対する証拠として利用できますが、アセンブリは署名されていません。 セキュリティの観点から、遅延署名には 2 つの主な利点があります:</p>
  <ul>
    <li>アセンブリを署名しデジタル署名を作成するため使用される私有鍵は、中央のロケーションで安全に保持されます。 鍵は数名の信頼済みの個人のみがアクセスできます。 結果として、私有鍵が攻撃される機会は著しく少ないです。 <li>開発企業またはソフトウェア発行元を代表するために使用できる単一の公開鍵は、各々の開発者が独自の公開鍵および私有鍵ペア（一般的に <b>sn -k</b> コマンドで生成される）のかわりに、開発チームのすべてのメンバーが使用されます。 </li></li>
  </ul>
  <h3>遅延署名用の公開鍵ファイルの作成</h3>
  <p>遅延署名を使用する時は、公開鍵だけを含む .snk ファイルに入れて公開鍵を配布してください。 次に、アセンブリに遅延署名するときに -<b>keyfile</b> コンパイラ スイッチを使用するか、またはこの属性を使用する既存の NET 1.x コードを持っている場合は <b>AssemblyKeyFile</b> 属性を使用し続けてください。</p>
  <p>署名する権限者は次のプロシージャを行って、開発者がアセンブリに遅延署名するために使用できる公開鍵ファイルを作成します。</p>
  <p>
    <b>遅延署名用の公開鍵を作成する</b>
  </p>
  <ol>
    <li>企業用の鍵ペアを作成してください。 <p><b>sn.exe -k keypair.snk</b></p><li>鍵ペア ファイルから公開鍵を抽出してください。 <p><b>sn -p keypair.snk publickey.snk</b></p><li>Keypair.snk をセキュアにしてください、これは私有鍵と公開鍵の両方を含みます。 例えば、コンパクトディスクまたはスマート カードのような他のハードウェア デバイスに置き、物理的にセキュアにしてください。 <li>すべての開発者が Publickey.snk を利用できるようにしてください。 例えば、ネットワーク共有に置いてください。 </li></li></li></li>
  </ol>
  <h3>アセンブリに遅延署名する</h3>
  <p>このプロシージャは開発者が行います。</p>
  <p>
    <b>アセンブリに遅延署名するには</b>
  </p>
  <ol>
    <li>Visual Studio で、プロジェクトのプロパティを表示してください。 <li><b>Signing</b> タブをクリックし、<b>Sign the assembly</b> および <b>Delay sign only</b> のチェック ボックスを選択してください。 <li><b>Choose a strong name key file:</b> ドロップダウン ボックスで、&lt;<b>Browse…</b>&gt; を選択してください。 <li>ファイル選択ダイアログ ボックスで、公開鍵 (.snk) までたどり、<b>OK</b> をクリックしてください。<b></b><li>アセンブリをビルドしてください。 コンパイラは、選択された鍵ペア (.snk) ファイルの公開鍵を使用して、厳密名の付いた署名済みアセンブリをビルドします。 <blockquote><b>注意</b>: &nbsp;&nbsp;遅延署名されたプロジェクトは実行されず、デバッグできません。 ただし、開発中には検証をスキップする<b>-Vr</b> オプションを使用して厳密名ツール(Sn.exe)を使用できます。</blockquote><li>遅延署名のプロセスおよびアセンブリ署名の欠如は、アセンブリが読み込み時に失敗することを意味します。 これを避けるには、開発中に次のコマンドを使用し、コンピュータをテストしてください。 <ul><li>特定のアセンブリで検証を無効にするには、次のコマンドを使用してください。 <p><b>sn -Vr assembly.dll</b></p><li>特定の公開鍵を持つすべてのアセンブリ用で検証を無効にするには、次のコマンドを使用してください。 <p><b>sn -Vr *,publickeytoken</b></p><li>公開鍵および鍵トークン (公開鍵の省略ハッシュ) を抽出するには、次のコマンドを使用してください。 <p><b>sn -Tp assembly.dll</b></p></li></li></li></ul><blockquote><b>注意</b>: &nbsp;&nbsp;大文字の <b>-T</b> スイッチを使用してください。<b></b></blockquote><li>アセンブリのタンパリング防御をするために署名プロセスを完了しデジタル署名を作成するには、次のコマンドを実行してください。 これには私有鍵が必要となり、結果としてオペレーションは通常、正式なビルトおよびリリースのプロセスの一部として実施されます。 次のコマンドは、Keypair.snk ファイルに含まれる鍵ペアを使用して、厳密名を持つ Assembly.dll と名付けられたアセンブリに再署名します。 <p><b>sn -R assembly.dll keypair.snk</b></p></li></li></li></li></li></li></li>
  </ol>
  <h3>遅延署名を使用しない場合、.pfx ファイルを使用して私有鍵を保護する</h3>
  <p>遅延署名を使用しない場合、私有鍵を保護するためには パスワード保護された .pfx ファイルを使用してください。 このアプローチは、小から中規模のプロジェクトにはより適切です。 私有鍵を含んでいた .snk ファイルを回覧した、もしくはアクセスしたことが以前にあった場合、代わりに .pfx ファイルの使用を検討することをお勧めします。</p>
  <hr />
  <p>出典: Microsoft patterns & practices guidance</p>]]></Data>
  </Content>
</TeamMentor_Article>