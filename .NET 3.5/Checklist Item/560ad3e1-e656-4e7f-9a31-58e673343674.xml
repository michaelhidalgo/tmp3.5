<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="1290166815" Content_Hash="1667692197">
  <Metadata>
    <Id>560ad3e1-e656-4e7f-9a31-58e673343674</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>Activator.CreateInstance がアドインを読み込む時に、完全なアセンブリ名を使用する</Title>
    <Category>リフレクション</Category>
    <Phase>実装</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>チェックリスト項目</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>チェック対象</h1>
  <p>Activator.CreateInstance が悪意のあるアセンブリを読み込むことを防止するために、完全なアセンブリ名を使用するようにする。</p>
  <p />
  <h1>修正方法</h1>
  <p>コードがアセンブリのダイナミック ローディングをサポートしている場合は、<b>Activator.CreateInstance</b> を呼び出してアセンブリをロードする際は､必ず強力な名前を使用してアセンブリを参照します。 これにより、アプリケーションが正当なアセンブリと同一の名前を持つ悪意のあるアセンブリを偶発的に読み込むことを防止できます。 アセンブリの強力な名前には､アセンブリに署名として付けた公開鍵トークンが含まれ､鍵作成者の証跡を提供します。</p>
  <p>次の例は､アセンブリに強力な名前が付けられているかを検証する方法を示しています。</p>
  <div>
 <pre>
      <pre>public static StrongName GetStrongName(Assembly assembly){<br />    if(assembly == null)<br />        throw new ArgumentNullException("assembly");<br />    AssemblyName assemblyName = assembly.GetName();<br />            // get the public key blob<br />    byte[] publicKey = assemblyName.GetPublicKey();<br />    if(publicKey == null || publicKey.Length == 0)<br />        throw new InvalidOperationException(<br />            String.Format("{0} is not strongly named",<br />             assembly));<br />        StrongNamePublicKeyBlob keyBlob = new StrongNamePublicKeyBlob(publicKey);<br />    // create the StrongName<br />    return new StrongName(<br />        keyBlob, assemblyName.Name, assemblyName.Version);<br />}</pre>
    </pre>
  </div>
  <hr />
  <p>出典: Microsoft patterns & practices guidance</p>]]></Data>
  </Content>
</TeamMentor_Article>