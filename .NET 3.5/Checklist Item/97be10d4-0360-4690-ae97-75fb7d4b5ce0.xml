<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="1967646018" Content_Hash="1913090310">
  <Metadata>
    <Id>97be10d4-0360-4690-ae97-75fb7d4b5ce0</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>Dispose メソッドは同期されます。</Title>
    <Category>スレッディング</Category>
    <Phase>実装</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>チェックリスト項目</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>チェック対象</h1>
  <p>アプリケーションに非同期の<b>Dispose</b> 実装を&nbsp;開発する際に、Dispose メソッドが同期されていることを確認してください。</p>
  <p />
  <h1>修正方法</h1>
  <p>非同期の<b>Dispose</b> 実装を開発すると、<b>Dispose</b> コードは別のスレッドで複数回呼び出すことができます。 以下のコードはこの例を示しています。</p>
  <div>
 <pre>void Dispose(){<br />  if (null != theObject)<br />  {<br />    ReleaseResources(theObject);<br />    theObject = null;<br />  }<br />}</pre>
  </div>
  <p>この例では、最初のスレッドが <b>theObject</b> 参照を ［<b>null</b>］ に設定する前に 2 つのスレッド がコードを実行することができます。 <b>ReleaseResources</b> メソッドによって提供されている機能に基づいて、セキュリティの脆弱性が生じる可能性があります。</p>
  <hr />
  <p>出典: Microsoft patterns & practices guidance</p>]]></Data>
  </Content>
</TeamMentor_Article>