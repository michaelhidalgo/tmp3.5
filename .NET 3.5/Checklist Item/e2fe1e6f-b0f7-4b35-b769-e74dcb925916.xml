<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="1823160005" Content_Hash="-450071842">
  <Metadata>
    <Id>e2fe1e6f-b0f7-4b35-b769-e74dcb925916</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>適切な場面で、デリゲートのアクセス許可が制約される</Title>
    <Category>デリゲート</Category>
    <Phase>実装</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>チェックリスト項目</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>チェック対象</h1>
  <p>アプリケーションが部分信頼の呼び出し元を許可するように、デリゲートへのアクセス許可の制約を&nbsp;検討することを確認してください。</p>
  <p />
  <h1>修正方法</h1>
  <p>デリゲートをコードに渡す時に適切なアクセス許可要求を使用して外部コードを認可するか、もしくは拒否または許可のみのスタック モディファイアを使用して、デリゲートのアクセス許可を呼び出し直前にだけ制約することができます。 例えば、次のコードは、デリゲート コードのみの実行アクセス許可を付与してその能力を制約します。</p>
  <div>
 <pre>
      <pre>using System.Security;<br />using System.Security.Permissions;<br />...<br />// Delegate definitionpublic <br />delegate void SomeDelegate(string text);<br />    public void ExecDelegateWithExcePerm(){<br />        // Permit only execution, prior to calling the delegate. This prevents the<br />        // delegate code accessing resources or performing other privileged<br />        // operations<br />        new SecurityPermission(SecurityPermissionFlag.Execution).PermitOnly();<br />        // Now call the "constrained" delegate<br />        SomeDelegate del = new SomeDelegate(DisplayResults);<br />        // Revert the permit only stack modifier<br />        CodeAccessPermission.RevertPermitOnly();<br />}<br />private void DisplayResults(string result)<br />{<br />...<br />}</pre>
    </pre>
  </div>
  <hr />
  <p>出典: Microsoft patterns & practices guidance</p>]]></Data>
  </Content>
</TeamMentor_Article>