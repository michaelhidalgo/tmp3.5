<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="-996758195" Content_Hash="-1341433457">
  <Metadata>
    <Id>de32cdfb-1a9b-4a0a-a05c-2d80c39332c9</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>ロールベース認可を実行する方法</Title>
    <Category>認可</Category>
    <Phase>実装</Phase>
    <Technology>WCF 3.5</Technology>
    <Type>その方法</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>適用対象</h1>
  <ul>
    <li>Microsoft® Windows Communication Foundation (WCF) 3.5 <li>Microsoft Visual Studio® 2008</li></li>
  </ul>
  <h1>説明</h1>
  <p>ロール ベースの認可は、ユーザーをグループ（ロール）に分けるのに使用され、各ユーザーではなく役割ごとにアクセス許可を設定します。 大きなユーザーセットではなく小さなロール セットを管理することができ、より管理が簡単になります。 </p>
  <p>次は、認証の選択肢に基づいて、ロール ベースの認可作成についての異なるオプションを挙げています。</p>
  <ul>
    <li>Windows または Basic 認証を使用する場合、ロール ベースの認可に Windows グループを使用できます。<li>Username 認証を使用する場合、ロールベースの認可にASPNET ロールを使用できます。<li>証明書認証を使用する場合は、ロール ベースの認可のために、証明書をWindowsグループにマップできます。</li></li></li>
  </ul>
  <p>次の例では、ASPNET Roleの使用のために、SQL Roleプロバイダーを有効化するようにサービスを構成しています。</p>
  <ol>
    <li>SQL Role プロバイダーを構成<ol><pre>    &lt;!-- Configure the Sql Role Provider --&gt;<br />    &lt;roleManager enabled ="true" <br />                 defaultProvider ="SqlRoleProvider" &gt;<br />      &lt;providers&gt;<br />        &lt;add name ="SqlRoleProvider" <br />             type="System.Web.Security.SqlRoleProvider" <br />             connectionStringName="SqlConn" <br />             applicationName="MembershipAndRoleProviderSample"/&gt;<br />      &lt;/providers&gt;<br />    &lt;/roleManager&gt;<br />    &lt;!-- Configure role based authorization to use the Role Provider --&gt;<br />    &lt;serviceAuthorization principalPermissionMode ="UseAspNetRoles"<br />                          roleProviderName ="SqlRoleProvider" /&gt;</pre><div></div></ol><li>サービスメソッドに PrincipalPermission 属性を含め、必要な認可アクセスロールを指定します。<ol><pre>   [PrincipalPermission(SecurityAction.Demand, Role = "Registered Users")]<br />    public double Multiply(double n1, double n2)<br />      {<br />         double result = n1 * n2;<br />         return result;<br />      }</pre><div></div></ol><li>次のコードは、コードにより認可確認を行う方法を示します。<ol><pre><br />if (Roles.IsUserInRole(@"accounting"))<br />{<br />//authorized<br />}<br />else<br />{<br />//authorization failed</pre><pre>}</pre></ol><li>次のクライアント接続は、メソッドを呼び出すユーザー名とパスワードを与えます。</li></li></li></li>
  </ol>
  <blockquote>
    <p />
    <div>
 <pre>      // Set credentials to Alice<br />      client.ClientCredentials.UserName.UserName = "Alice";<br />      client.ClientCredentials.UserName.Password = "ecilA-123";</pre>
    </div>
    <p />
    <p />
    <div>
 <pre>      // Call the Add service operation.<br />      double value1 = 100.00D;<br />      double value2 = 15.99D;<br />      double result = client.Multiply(value1, value2);<br /></pre>
    </div>
    <p />
  </blockquote>
  <h1>その他のリソース</h1>
  <ul>
    <li>認可の詳細情報については、「認可」 (<a href="http://msdn2.microsoft.com/en-us/library/ms733071.aspx">http://msdn2.microsoft.com/en-us/library/ms733071.aspx) を参照してください。</a><li>認可のQ&A については、<a href="http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=WCF%20Security%20Guidelines&referringTitle=Home">http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=WCF%20Security%20Guidelines&referringTitle=Home にある「WCF 3.5 質疑応答」を参照してください。</a><br /></li></li>
  </ul>
  <hr />
  <p>出典: Microsoft patterns & practices guidance</p>]]></Data>
  </Content>
</TeamMentor_Article>