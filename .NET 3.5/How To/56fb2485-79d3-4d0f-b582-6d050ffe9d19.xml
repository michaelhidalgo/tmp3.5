<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="-1743284693" Content_Hash="-699666827">
  <Metadata>
    <Id>56fb2485-79d3-4d0f-b582-6d050ffe9d19</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>コールバック関数にFault Contract を実装する方法</Title>
    <Category>エラーと例外の管理</Category>
    <Phase>実装</Phase>
    <Technology>WCF 3.5</Technology>
    <Type>その方法</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>適用対象</h1>
  <ul>
    <li>Microsoft® Windows Communication Foundation (WCF) 3.5 
<li>Microsoft Visual Studio® 2008</li></li>
  </ul>
  <h1>説明</h1>
  <p>二重バインディングでは、クライアントが実装できるようにインターフェイスを特定したコールバック コントラクトを備えるサービスを実装する必要があります。 サービス コントラクトにおいて <strong>CallbackContract</strong> 属性を使用し、コールバック機能を持つコールバック コントラクトの種類を指定します。</p>
  <p>以下のコードの例は、コールバック コントラクトを指定するサービスを示しています。</p>
 <pre>[ServiceContract(CallbackContract = typeof(IMyContractCallback))]<br />interface IMyContract<br />{<br />   [OperationContract]<br />   void DoSomething( );<br />}<br />interface IMyContractCallback<br />{<br />   [OperationContract]<br />   [FaultContract(typeof(InvalidOperationException))]<br />   void OnCallBack( );<br />}</pre>
  <h1>その他のリソース</h1>
  <ul>
    <li>フォールト コントラクトの詳細は、<a href="http://msdn.microsoft.com/en-us/library/ms733721.aspx">http://msdn.microsoft.com/en-us/library/ms733721.aspx にある「コントラクトとサービスのフォールトを指定し処理する」を参照してください。</a></li>
  </ul>
  <hr />
  <p>出典: Microsoft patterns & practices guidance</p>]]></Data>
  </Content>
</TeamMentor_Article>