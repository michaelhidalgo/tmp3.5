<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="-751718359" Content_Hash="-423510722">
  <Metadata>
    <Id>34a6f455-b670-4c86-8e6f-1b4b67ab2cb2</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>ハッシュ化を使用する方法</Title>
    <Category>暗号化</Category>
    <Phase>実装</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>その方法</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>説明</h1>
  <p>共有している秘密を間違いなく知っていることを証明するためにプリンシパルが必要な場合、SHA256 または MD5 のようなハッシュ化アルゴリズムを使用してください。 以下のコード例は、SHA256 などのハッシュ化アルゴリズムを使用してデータをハッシュする方法を示しています。 </p>
 <pre>using System.Security.Cryptography;...<br />// Create a new instance of the hash crypto service provider.<br />HashAlgorithm hashAlg = new SHA256CryptoServiceProvider(); <br />// Convert the data to hash to an array of Bytes.<br />byte[] bytValue = System.Text.Encoding.UTF8.GetBytes(stringDataToHash);<br />// Compute the Hash. This returns an array of Bytes.<br />byte[] bytHash = hashAlg.ComputeHash(bytValue);<br />// Optionally, represent the hash value as a base64-encoded string, <br />// For example, if you need to display the value or transmit it over a network.<br />string base64 = Convert.ToBase64String(bytHash);  </pre>
  <p>(例えば)パスワード用にハッシュ値を計算し保存した時は、呼び出し元がパスワードを知っているかどうかを、パスワードを尋ねて回答してきたデータを使用してハッシュ値を再計算し、その結果を保存されているハッシュと比較することによりチェックできます。 </p>
  <blockquote>
    <b>注意</b>: &nbsp;&nbsp;パスワードのハッシュ化で、パスワード値の読み取りはできませんが検証はできます。</blockquote>
  <p>ハッシュを使用してパスワードをデータベースに保存する場合、ハッシュを計算するより前にパスワードを無作為なソルト値と組み合わせる必要があります。 次のコード例に示すように、<b>RNGCryptoServiceProvider</b> クラスを使用してソルト値を計算することができます。 </p>
 <pre>using System.Security.Cryptography;...<br />private static string CreateSalt(int size){<br />    // Generate a cryptographic random number using the cryptographic <br />    // service provider<br />    RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider();<br />    byte[] buff = new byte[size];<br />    rng.GetBytes(buff);<br />    // Return a Base64 string representation of the random number<br />    return Convert.ToBase64String(buff);<br />}  </pre>
  <blockquote>
    <b>注意</b>: &nbsp;&nbsp;ASP.NET SQL Server メンバーシップ プロバイダーを使用する場合、プロバイダー コンフィグレーションに <b>passwordFormat="Hashed"</b> を設定して追加したソルトとパスワード ハッシュを保存するよう設定できます。&nbsp;</blockquote>
  <hr />
  <p>出典: Microsoft patterns & practices guidance</p>]]></Data>
  </Content>
</TeamMentor_Article>