<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="-269836981" Content_Hash="1403741919">
  <Metadata>
    <Id>ebbcc72f-c88a-4fb1-8a8f-622ed02a0a29</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>WCF でプログラム型の偽装を行う方法</Title>
    <Category>なりすましと委任</Category>
    <Phase>実装</Phase>
    <Technology>WCF 3.5</Technology>
    <Type>その方法</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>適用対象</h1>
  <ul>
    <li>Microsoft® Windows Communication Foundation (WCF) 3.5 <li>Microsoft Visual Studio® 2008</li></li>
  </ul>
  <h1>説明</h1>
  <p>プログラム型の偽装では、操作全体に対してはなくコードの特定の行で偽装を行うことができます。 粒度別のこの偽装方法によってセキュリティ リスクを軽減することができますが、実装時にミスを犯してしまうことで、エラーの発生時にコードが高位の特権で偽装状態のままになる可能性が高くなりますので注意してください。 using 文を使用して、偽装を自動的に戻します。</p>
  <p>元の呼び出しをプログラム的に偽装するには、元の呼び出し元のWindows Identity へのアクセスを持ち、WCFサービスへの呼び出しが必要です。 このため、Windows 認証を求めるようにWCF サービスを構成する必要があります。 プログラム型の偽装では、操作全体に対してはなくコードの特定の行で偽装を行うことができます。</p>
  <p>ここに示すように<strong>ServiceSecurityContext.Current.WindowsIdentity</strong> クラスのメソッドの偽装を使用します。 </p>
 <pre>public string GetData(int value)<br />{<br /> using (ServiceSecurityContext.Current.WindowsIdentity.Impersonate())<br /> {<br />     // Execute under security context of the original caller<br /> }   <br />}</pre>
  <p>
    <strong>重要</strong>: 偽装が終了したら元に戻してください。上記の例では、using文が使用されています。</p>
  <h1>その他のリソース</h1>
  <ul>
    <li>更なる情報については<a href="http://msdn2.microsoft.com/en-us/library/ms730088.aspx">http://msdn2.microsoft.com/en-us/library/ms730088.aspxにある「Delegation and Impersonation with WCF（WCF での委任と偽装）」</a><li>詳細は、<a href="http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How%20To%20-%20Impersonate%20the%20Original%20Caller%20in%20WCF%20calling%20from%20Windows%20Forms&referringTitle=How%20Tos">http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How%20To%20-%20Impersonate%20the%20Original%20Caller%20in%20WCF%20calling%20from%20Windows%20Forms&referringTitle=How%20Tos にある「Windows フォームから呼び出す WCF で当初の呼び出し元を偽装する方法」を参照してください。</a><li>詳細は、<a href="http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How%20To%20-%20Impersonate%20the%20Original%20Caller%20in%20WCF%20calling%20from%20Web%20Application&referringTitle=How%20Tos">http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How%20To%20-%20Impersonate%20the%20Original%20Caller%20in%20WCF%20calling%20from%20Web%20Application&referringTitle=How%20Tos にある 「Web アプリケーションから呼び出す WCF で当初の呼び出し元を偽装する方法」を参照してください。</a><li>偽装と委任に関するQ&Aは、<a href="http://www.codeplex.com/WCFSecurityGuide/">http://www.codeplex.com/WCFSecurityGuide/から「WCF 3.5 に関する質問事項」の偽装と委任の項をご覧ください。</a><a href="http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=WCF%20Questions%20and%20Answers%20%28Q%26A%29&referringTitle=Home"></a><a href="http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=WCF%20Questions%20and%20Answers%20%28Q%26A%29&referringTitle=Home"></a></li></li></li></li>
  </ul>
  <hr />
  <p>出典: Microsoft patterns & practices guidance</p>]]></Data>
  </Content>
</TeamMentor_Article>