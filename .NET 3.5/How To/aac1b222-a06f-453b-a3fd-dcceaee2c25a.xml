<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="1728160040" Content_Hash="1288560341">
  <Metadata>
    <Id>aac1b222-a06f-453b-a3fd-dcceaee2c25a</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>既知のプレーンテキスト バグのテスト方法</Title>
    <Category>暗号化</Category>
    <Phase>テスト</Phase>
    <Technology>Web アプリケーション</Technology>
    <Type>その方法</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>
    <span>該当項目:</span>
  </h1>
  <ul>
    <li>
      <span>公開鍵と私有鍵の暗号化アルゴリズム。<b></b></span>
    </li>
  </ul>
  <p>
    <b>
      <span>&nbsp;</span>
    </b>
  </p>
  <h1>
    <span>要約</span>
  </h1>
  <p>
    <span>既知の平文攻撃では、攻撃者はプレーンテキストとそれに相当する暗号文の両方を知っていて、両方を使用して暗号鍵などの秘密の暗号変数を計算します。<span>&nbsp;&nbsp; </span>攻撃者は、被害者が特定の選択平文を暗号化するように強制する必要がないため、既知のプレーンテキスト バグはエクスプロイトするのが簡単です。</span>
  </p>
  <p>
    <span>既知のプレーンテキスト バグをテストするには、次の手順が推奨されます。</span>
  </p>
  <ul>
    <li>
      <span>手順 1: <span> </span>攻撃シナリオを理解する</span>
    </li>
    <li>
      <span>手順 2: <span> </span>根本原因と緩和手段の解析</span>
    </li>
    <li>
      <span>手順 3: <span> </span>テストと調査を開始する</span>
    </li>
    <li>
      <span>手順 4: <span> </span>テスト ケースの調整</span>
    </li>
  </ul>
  <p>
    <b>
      <span>&nbsp;</span>
    </b>
  </p>
  <h1>
    <span>手順 1: <span> </span>攻撃シナリオの理解</span>
  </h1>
  <p>
    <span>最初に、既知の平文攻撃の詳細を理解する必要があります。<span>&nbsp; </span>一般的な既知の平文攻撃のシナリオでは、攻撃者の目的は暗号鍵を復元することです。<span> </span>このシナリオは、攻撃者が被害者を選択して、被害者が暗号化するプレーンテキストを発見することから始まります。<span> </span>次に、攻撃者は被害者がプレーンテキストを暗号化するまで待ち、結果の暗号文を観察します。<span> </span>次に、攻撃者はプレーンテキストと暗号文の両方を使用して、次の式を満たす暗号鍵を復元します。</span>
  </p>
  <p>
    <i>
      <span>C = E(K, P)</span>
    </i>
  </p>
  <p>
    <span></span>
    <i>
      <span>E </span>
    </i>
    <span>はプレーンテキスト</span>
    <i>
      <span>P</span>
    </i>
    <span> を暗号文</span>
    <i>
      <span>C</span>
    </i>
    <span> に、暗号鍵</span>
    <i>
      <span> K の使用によって、変換する暗号化ルーチンを意味します。</span>
    </i>
  </p>
  <p>
    <span>攻撃者が暗号鍵を計算することができる場合、以下の式が示しているように、それを使用して不明な暗号文を復号することができます。</span>
  </p>
  <p>
    <i>
      <span>Pu</span>
    </i>
    <i>
      <span>&nbsp;= D(K, Ck)</span>
    </i>
    <span>
    </span>
  </p>
  <p>
    <span></span>
    <i>
      <span>D </span>
    </i>
    <span>は既知の暗号文</span>
    <i>
      <span>Ck </span>
    </i>
    <span>を不明なプレーンテキスト</span>
    <i>
      <span>Pu</span>
    </i>
    <span> に、暗号鍵</span>
    <i>
      <span> K の使用によって、変換する復号ルーチンを意味します。</span>
    </i>
  </p>
  <p>
    <span>攻撃者は、パスワードやクレジット カード番号などの潜在的に機微データを含む、盗み取られた鍵を使用して作成されたあらゆる暗号文を復号することができます。</span>
    <i>
      <span>
      </span>
    </i>
  </p>
  <p>
    <b>
      <span>&nbsp;</span>
    </b>
  </p>
  <h2>
    <span>手順 2: <span> </span>根本原因と緩和手段の解析</span>
  </h2>
  <p>
    <span>セクション名で示されているように、平文攻撃の成功は、プレーンテキストが暗号化されていることを<i>知っているか</i>に依存します。<span>&nbsp; </span>攻撃者がプレーンテキストに関して知ることは不可能に見えるかもしれません。 ただし、これが発生する可能性のある、いくつかの状況があります。<span> </span>たとえば、被害者が職場から離れていて、自動返信の電子メール メッセージが構成されているとします。 攻撃者は暗号化される前のメッセージの内容が分かっているかもしれません。<span> </span>もう 1 つの一般的な例は、被害者が攻撃者を含む人々に電子メールを送信する場合です。<span> </span>次に、攻撃者は送信されたプレーンテキスト、および他の全員に送信された暗号文を読み込むことができます。<span> </span><span>&nbsp;</span></span>
  </p>
  <p>
    <span>さらなる攻撃は、攻撃者がレビュー プロセスの一環として暗号化されたドキュメントを交わしている 2 人の間の電子メール会話をスニッフィングすることから成るかもしれません。<span>&nbsp; </span>ドキュメントが公開されたら、攻撃者はプレーンテキストの公開ドキュメントを暗号化ファイルの最新バージョンと比較できます。<span> </span><span>&nbsp;</span><i>部分的に既知の</i>平文攻撃は、IP パケットのヘッダー、電子メールの始まりなどのプレーンテキストの一部を知っている場合に発生します。<span> </span>攻撃者が使用中のプレーンテキストを知る方法はさまざまあります。この脆弱性の根本原因は、攻撃者がそのようなプレーンテキストを認知することが可能になる状況です。</span>
  </p>
  <p>
    <span>ほとんどの原因は意図的なものによって発生するため、これらの攻撃に対しては明確な緩和手段はありません。<span>&nbsp; </span>たとえば、電子メール サーバーは自動返信メッセージを利用する機能を提供します。<span> </span>さらに、被害者が攻撃者にグループ電子メールのコピーを送信するとき、攻撃者がグループの一員である場合、被害者による攻撃者への電子メールの送信を防止する方法がありません。<span> </span>攻撃者がレビュー中の暗号化ドキュメントをスニッフィングする場合を検討します。 この攻撃の可能な緩和手段には、ドキュメント レビューに関与する者にイントラネット ポータルや同様のメカニズムにドキュメントをチェック インすることを要求するなどの高レベルの分析と教育を必要とします。<span> </span></span>
  </p>
  <p>
    <span>&nbsp;</span>
  </p>
  <h1>
    <span>手順 3: <span> </span>テストと調査の開始</span>
  </h1>
  <p>
    <span>平文攻撃がどのようなものか、およびそれが存在する理由について学んだ上で、セキュアおよびセキュアでない実装の両方をテストする必要があります。</span>
  </p>
  <p>
    <span>基本的な既知のプレーンテキスト セキュリティ テストは、以下の手順に従っています。</span>
  </p>
  <ol>
    <li>
      <span>被害者を選択します。</span>
    </li>
    <li>
      <span>被害者が暗号化する前にプレーンテキストを読み込みます。</span>
    </li>
    <li>
      <span>被害者が暗号化した後に暗号文を読み込みます。</span>
    </li>
    <li>
      <span>プレーンテキストと暗号文を使用して、暗号鍵を計算します。</span>
    </li>
  </ol>
  <p>
    <i>
      <span>予期される結果:</span>
    </i>
    <span>
      <span>&nbsp; </span>システムは手順 2 でプレーンテキストが暗号化される前に、その読み込みに対して保護します。<span> </span>手順 2 が実行可能な場合、テストは失敗します。</span>
  </p>
  <p>
    <span>この手順中に、テスト中のシステムによって使用される暗号化ルーチンを調査することは重要です。<span>&nbsp; </span>たとえば、暗号化前後のデータのサイズを確認できます。<span> </span>暗号化ルーチンがデータ サイズを変更しない場合、プレーンテキストと暗号文は同じサイズになります。<span> </span>後で、一次検証としてサイズを比較し、暗号文が既知のプレーンテキストに一致するかどうかを確認することができます。 </span>
  </p>
  <p>
    <span>既知のプレーンテキスト バグをテストするもう 1 つの方法は、暗号化システムの有効なユーザーになることです。<span>&nbsp; </span>たとえば、複数のクライアントを有し、さまざまな鍵を使用して各クライアントと対話するシステムを思い浮かべてください。<span> </span>有効なクライアントになった後、ネットワーク モニターを構成して、どのようにサーバー アプリケーションが自分と通信するかを確認できます。<span> </span>ほとんどの場合、サーバー アプリケーションは同じプロトコルを使用して複数のクライアントと対話するため、ネットワーク パケットの一部分 (ヘッダーなど) は一定のものになります。<span> </span>これらのヘッダーは、自分に送信されるにつれてプレーンテキストで読み込むこと、および各クライアントに送信されるにつれて暗号文として読み込むことが可能であり、この収集されたデータの組み合わせの使用により、クライアントの私有鍵への攻撃を実行することができます。<span>&nbsp;&nbsp;&nbsp; </span></span>
  </p>
  <p>
    <span>&nbsp;</span>
  </p>
  <h1>
    <span>手順 4: <span> </span>テスト ケースの調整</span>
  </h1>
  <p>
    <span>あらゆる脆弱性と同様に、既知の平文攻撃のテスト量は、危険度に依存します。<span>&nbsp; </span>一部のケースでは、明確な危険が見られないことがあります。 大きな鍵と信頼される暗号化アルゴリズムを使用しているシステムでは、既知の暗号解析を使用して鍵を計算するのに時間がかかり過ぎる場合があります。<span> </span>ただし、一部のシステムはミッション クリティカル、ハーメチック、または自立していて</span>
    <span>
      <span>、</span>
    </span>
    <span>そのような場合、暗号化前のプレーンテキストに関するいかなる潜在的知識は大きな危険をもたらす可能性があります。<span>&nbsp;&nbsp; </span></span>
  </p>
  <p>
    <span>また、テスト前に攻撃の目的を決める必要もあります。<span>&nbsp; </span>必ず各テスト ケースで攻撃の目的を定義してください (クライアントの鍵、サーバーの鍵、または両方の解読など)。<span> </span>テスト中のシステムのセキュリティに対し、中にはより重要な鍵がいくつかあるので、この事実を使用してテスト ケースを調整できます。</span>
  </p>
  <p>
    <b>
      <span>&nbsp;</span>
    </b>
  </p>
  <h1>
    <span>結論</span>
  </h1>
  <p>
    <span>既知の平文攻撃は、攻撃者が暗号化前のプレーンテキストを知っている暗号攻撃です。<span>&nbsp; </span>攻撃の目的は、暗号鍵を計算してさらなる機微データを取得することです。<span> </span>これらの攻撃をテストするには、それらの攻撃シナリオに加えて、根本原因と緩和手段を理解する必要があります。<span> </span>次に、メッセージ データの長さの確認などの積み上げ方式でテストを開始してから、システムの正当なクライアントになったり、転送されている暗号化テキストの形式を解析したりするなどの追加のアプローチを使用する必要があります。<span> </span>必ず特定の暗号鍵の機微性、および攻撃者がそれを盗み取る危険度に基づいて、テスト ケースを調整してください。</span>
    <b>
      <u>
        <span>
        </span>
      </u>
    </b>
  </p>
  <p>
    <b>
      <span>&nbsp;</span>
    </b>
  </p>
  <p>
    <b>
      <span>&nbsp;</span>
    </b>
  </p>
  <p>
    <b>
      <span>&nbsp;</span>
    </b>
  </p>
  <p>&nbsp;</p>]]></Data>
  </Content>
</TeamMentor_Article>