<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="1095235368" Content_Hash="-1940119270">
  <Metadata>
    <Id>7346f667-d656-4fb1-b1d1-84cd75924dc9</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>WCF で宣言型の偽装を行う方法</Title>
    <Category>なりすましと委任</Category>
    <Phase>実装</Phase>
    <Technology>WCF 3.5</Technology>
    <Type>その方法</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>適用対象</h1>
  <ul>
    <li>Microsoft® Windows Communication Foundation (WCF) 3.5 <li>Microsoft Visual Studio® 2008</li></li>
  </ul>
  <h1>説明</h1>
  <p>OperationBehavior 属性を使用して、宣言的に偽装してください。 宣言型偽装には 2 つのオプションがあります:</p>
  <ul>
    <li>特定のオペレーションでの偽装<li>サービス全体での偽装</li></li>
  </ul>
  <p>
    <strong>特定のオペレーションでの偽装<br /></strong>特定のオペレーションの持続期間の全てにわたり元の呼び出し元を偽装したい場合は、このオプションを使用してください。 次のコード例でも示されている通り、クライアント偽装が必要などの演算でも OperationBehaviorAttribute （演算動作属性）属性を適用することによって宣言型偽装を実施することができます。</p>
 <pre>[OperationBehavior(Impersonation = ImpersonationOption.Required)]<br />public string GetData(int value)<br />{<br />   return “test”;<br />}</pre>
  <p>
    <strong>サービス全体での偽装</strong>
    <br />演算全ての時間全体において呼び出し元を偽装する場合にこのオプションを使用します。 サービス全体で偽装する場合は次の例で示されている通り、WCF 構成ファイルで impersonateCallerForAllOperations （全演算で呼び出し元）属性を "true" （正）に設定します。</p>
 <pre>…<br />&lt;behaviors&gt;<br />  &lt;serviceBehaviors&gt;<br />    &lt;behavior name="ServiceBehavior"&gt;<br />      &lt;serviceMetadata httpGetEnabled="true" /&gt;<br />      &lt;serviceDebug includeExceptionDetailInFaults="false" /&gt;<br />      &lt;serviceAuthorization impersonateCallerForAllOperations="true" /&gt;<br />    &lt;/behavior&gt;<br />  &lt;/serviceBehaviors&gt;<br />&lt;/behaviors&gt;<br />…</pre>
  <p>全演算の偽装をする場合、各方法に適用される OperationBehaviorAttribute （演算動作属性）は Allowed （可）まはたRequired（要）に設定されている必要があります。</p>
  <h1>その他のリソース</h1>
  <ul>
    <li>更なる情報については<a href="http://msdn2.microsoft.com/en-us/library/ms730088.aspx">http://msdn2.microsoft.com/en-us/library/ms730088.aspxにある「Delegation and Impersonation with WCF（WCF での委任と偽装）」</a><li>詳細は、<a href="http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How%20To%20-%20Impersonate%20the%20Original%20Caller%20in%20WCF%20calling%20from%20Windows%20Forms&referringTitle=How%20Tos">http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How%20To%20-%20Impersonate%20the%20Original%20Caller%20in%20WCF%20calling%20from%20Windows%20Forms&referringTitle=How%20Tos にある「Windows フォームから呼び出す WCF で当初の呼び出し元を偽装する方法」を参照してください。</a><li>詳細は、<a href="http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How%20To%20-%20Impersonate%20the%20Original%20Caller%20in%20WCF%20calling%20from%20Web%20Application&referringTitle=How%20Tos">http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How%20To%20-%20Impersonate%20the%20Original%20Caller%20in%20WCF%20calling%20from%20Web%20Application&referringTitle=How%20Tos にある 「Web アプリケーションから呼び出す WCF で当初の呼び出し元を偽装する方法」を参照してください。</a><li>偽装と委任のQ&Aについては、<a href="http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=Questions%20and%20Answers&referringTitle=Home">http://www.codeplex.com/WCFSecurityGuide</a> にある「WCF 3.5 質疑応答」の偽装/委任のセクションを参照してください。</li></li></li></li>
  </ul>
  <hr />
  <p>出典: Microsoft patterns & practices guidance</p>]]></Data>
  </Content>
</TeamMentor_Article>