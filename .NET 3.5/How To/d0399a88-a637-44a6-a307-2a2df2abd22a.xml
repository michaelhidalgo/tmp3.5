<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="1015763988" Content_Hash="-407708493">
  <Metadata>
    <Id>d0399a88-a637-44a6-a307-2a2df2abd22a</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>弱いパスワードのバグのテスト方法</Title>
    <Category>認証</Category>
    <Phase>テスト</Phase>
    <Technology> 任意</Technology>
    <Type>その方法</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>
    <span>対象</span>
  </h1>
  <ul>
    <li>パスワードを使用するすべてのアプリケーション</li>
  </ul>
  <h1>
    <span>要約</span>
  </h1>
  <p>弱いパスワードとは、認証をバイパスして正当なユーザーとしてターゲット アプリケーションにログインしようとする攻撃者にとって、予測が簡単なパスワードです。 電子商取引サイト、データベース サーバ、オペレーティング システムなどの、ユーザー アカウントに依存するシステムは、強力なパスワード ポリシーを定めることで、この攻撃を受けないようにする必要があります。</p>
  <p>弱いパスワードのバグをテストするには、以下の手順を実行します。</p>
  <ul>
    <li>手順 1: 背景情報を理解する<li>手順 2: 原因と対策を分析する<li>手順 3: テストと調査を開始する</li></li></li>
  </ul>
  <p>
    <span>&nbsp;</span>
  </p>
  <h1>
    <span>手順 1: 背景情報を理解する</span>
  </h1>
  <p>アプリケーションはクライアントのパスワードを自動作成するか、パスワード ポリシーを使用してクライアントに自身のパスワードを作成させます。 この攻撃は、自動作成されたパスワードと、アプリケーションやデータベース サーバ、オペレーティング システムなどのシステムが使用するパスワード ポリシーの強度を確認することを目指します。 </p>
  <h2>
    <em>強力なパスワード</em>
  </h2>
  <p>攻撃シナリオを分析する前に、強力なパスワードとは何かを理解する必要があります。 一般的に強力なパスワードとは、人間やコンピュータによる予測が困難なパスワードです。 強力なパスワードは以下を含む必要があります。</p>
  <ul>
    <li>8 文字以上<li>大文字小文字の組み合わせ<li>特殊文字 (^、@、# など) を 1 文字以上含む<li>数字を 1 文字以上含む</li></li></li></li>
  </ul>
  <p>以下の条件を満たすパスワードは強力なパスワードとはなりません。</p>
  <ul>
    <li>デフォルト値を使用している (admin、1234 など)<li>辞書に載っている単語を含む (house、pet など)<li>辞書に載っている単語を記号や数字で難読化したものを含む (h0us€、p3t など)<li>ユーザー名、電子メール アドレス、電話番号、生年月日などの個人情報を含む<li>以前に使用されたパスワードを含む</li></li></li></li></li>
  </ul>
  <h2>
    <em>攻撃シナリオ</em>
  </h2>
  <p>弱いパスワードのテストの目的は、アプリケーションのパスワード ポリシーの強度を評価し、十分な攻撃耐性があるかどうかを確認することです。 弱いパスワードを確認するには、一般的に 3 つの方法があります。</p>
  <ul>
    <li>新しいパスワードを作成する<li>パスワード ポリシーをレビューする<li>Credential 情報の総当たり攻撃 (Brute Force Attack)/辞書攻撃を実行する</li></li></li>
  </ul>
  <h3>
    <span>
      <em>シナリオ 1: 新しいパスワードを作成する</em>
    </span>
  </h3>
  <p>攻撃者が弱いパスワード ポリシーを確認する一番簡単な方法は、新しいパスワードを作成することです。 このシナリオでは、攻撃者はアプリケーションの登録領域 (Web アプリケーションの登録ページなど) に移動し、弱いパスワードを持つアカウントを作成します。 アプリケーションが弱いパスワードを許容する場合、攻撃者は、他のユーザーが弱いパスワードを持っている可能性があるため、総当たりなどの追加攻撃が可能であると判断します。</p>
  <h3>
    <span>
      <em>シナリオ 2: パスワード ポリシーをレビューする</em>
    </span>
  </h3>
  <p>攻撃者がターゲット システムで十分な特権を持つ場合は、設定ツールやテキスト エディターを使用してパスワード ポリシーをレビューし、システムにこのバグに対する脆弱性が存在するかどうかを確認できます。 たとえば Windows では、攻撃者はセキュリティ ポリシー エディターを実行して、Windows が強力なパスワードを定めているかどうかを確認できます。 強力なパスワードが使用されていないことが設定からわかる場合、システムには脆弱性があります。</p>
  <h3>
    <span>
      <em>シナリオ 3: Credential 情報の総当たり攻撃 (Brute Force Attack)/辞書攻撃を実行する</em>
    </span>
  </h3>
  <p>Credential 情報の総当たり攻撃 (Brute Force Attack)/辞書攻撃は、ターゲット システムでの特権を必要としないため、弱いパスワードを暴く方法として一般的です。 通常これらの攻撃は、パスワード クラッカーとして知られる自動ツールを実行し、辞書に載っている大量の単語を試行したり様々な範囲の文字を全数探索したりして弱いパスワードをテストします。 攻撃者は、数多くある総当たり攻撃 (Brute Force Attack)/辞書攻撃用ツール (NGSSQLCrack やBrutus など) を使用して、SQL Server や ASP.NET の弱いパスワードをそれぞれテストできます。 総当たり攻撃 (Brute Force Attack)/辞書攻撃の詳細については<i>「Credential 情報の総当たり攻撃 (Brute Force Attack) バグのテスト方法」を参照してください。</i></p>
  <p>&nbsp;</p>
  <h1>
    <span>手順 2: 原因と対策を分析する</span>
  </h1>
  <p>次の手順は、弱いパスワードのバグの原因とその防止策を理解することです。</p>
  <h2>
    <span>
      <em>弱いパスワード ポリシー</em>
    </span>
  </h2>
  <p>弱いパスワードが存在する理由は、アプリケーションが弱いパスワードを許容するパスワード ポリシーを実装していることにあります。 前のセクションで確認したとおり、弱いパスワード ポリシーは、短いパスワードや辞書に載っている単語や個人情報を含むパスワードなどを許容します。 通常このバグは、ユーザーが新しいアカウントを作成してパスワードを設定する場合に発生します。 脆弱性があるアプリケーションは、パスワードとしての強度を確認することなく、あらゆる値をパスワードとして許容します。</p>
  <h2>
    <span>
      <em>アプリケーション レベルの保護</em>
    </span>
  </h2>
  <p>この脆弱性を防止するには、強力なパスワード ポリシーを定める必要があります。 つまり、パスワードを保存する前に、十分に強力なものであることを確認します。 この確認を実装する効果的な手段として、正規表現を使用する方法があります。 たとえば MSDN は、弱いパスワードの確認方法として以下の正規表現を提示しています。</p>
 <pre>
    <span>(?!^[0-9]*$)(?!^[a-zA-Z]*$)^([a-zA-Z0-9]{8,10})$</span>
  </pre>
  <p>MSDN によれば、この正規表現は「 . . 強力なパスワードを検証するものです。 8 ~ 10 文字で、英数字をそれぞれ 1 文字以上含みます。特殊文字を含めることはできません」。</p>
  <p>この表現はより強力なパスワード ポリシーに適合するように変更できます (特殊文字を 1 文字以上含むなど)。 さらに、弱いパスワードの危険性が高い場合は、パスワードを保存する前に辞書に載っている単語や個人情報 (電子メール アドレス、生年月日など) の確認など、追加確認を実行することができます。</p>
  <h2>
    <span>
      <em>設定レベルの保護</em>
    </span>
  </h2>
  <p>オペレーティング システム、データベース サーバ、Web 環境は、強力なパスワードを使用するように構成できます。 たとえば、Windows ドメイン セキュリティ ポリシーを構成し、ドメイン管理者が指定する一定の複雑性要件をすべてのパスワードが満たすように定めることができます。 Windows 認証を使用するように  SQL Server を 設定している場合は、このソリューションを SQL サーバまで拡張することができます。 さらに、Forms Authentication 機能の一部として弱いパスワードを確認するように ASP.NET を構成できます。</p>
  <p>これらの例は Microsoft 固有のものですが、他のプラットフォームでも同様の設定オプションを利用できます。 アプリケーションとユーザーを適切に保護するには、個別の技術の設定オプションを理解する必要があります。</p>
  <h2>
    <span>
      <em>Credential 情報の総当たり攻撃 (Brute Force Attack)/辞書攻撃に対する保護</em>
    </span>
  </h2>
  <p>自動パスワード攻撃に対する保護には様々な方法があり、それぞれに利点と欠点があります。 アプリケーションは、アカウント ロックアウト ポリシーを使用し、ログインの試行が一定回数失敗した場合にアカウントがロックされるようにすることで保護できます。 しかし、攻撃者はこの機能を利用して正当なユーザーをロックアウトすることができます (<i>「アカウント ロックアウト バグのテスト方法」</i>を参照)。より効果的な手法として、クライアントに認識されることなくパスワード クラッカーの速度を下げるような遅延時間を認証プロセスに挿入する方法があります。 ただし、どんな遅延時間も、時間をかけた複雑な攻撃によって無効化される場合があります。 他のオプションには、CAPTCHA などの HIP (Human Interaction Proof) を使用する方法があります。 しかし、この技術もこれまでに無効化されたことがあります。 </p>
  <p>これらの手法を慎重に組み合わせて保護方法を選択してください。 対策の詳細については、<i>「Credential 情報の総当たり攻撃 (Brute Force Attack) バグのテスト方法」を参照してください。</i></p>
  <p>&nbsp;</p>
  <h1>
    <span>手順 3: テストと調査を開始する</span>
  </h1>
  <p>弱いパスワードのバグの背景情報を理解した後は、実際のテスト ケースをいくつか実行し、アプリケーションの脆弱性を確認する必要があります。</p>
  <h2>
    <span>
      <em>新しいパスワードの作成による弱いパスワードのテスト</em>
    </span>
  </h2>
  <p>このテストは、弱いパスワードを作成してパスワード ポリシーの強度をテストすることを目的としています。 以下の手順を実行して弱いパスワードをテストします。</p>
  <ol>
    <li>強力なパスワードを定めるルールを指定します (セクション 1 を参照)。 <li>登録ページなど、ユーザー アカウントの作成が可能なアプリケーション内の場所に移動します。 <li>手順 1 で指定したルールに適合しないパスワードを入力し、アカウント作成の要求を送信します。</li></li></li>
  </ol>
  <p>予測結果: 弱いパスワードを持つアカウントの作成が許可される場合、アプリケーションには脆弱性があります。 </p>
  <p>
    <b>
      <i>
        <span>
        </span>
      </i>
    </b>
  </p>
  <h2>
    <span>
      <em>セキュリティ ポリシーの確認による Windows の弱いパスワードのテスト</em>
    </span>
  </h2>
  <p>このテストは、セキュリティ ポリシーをレビューして弱いパスワードをテストすることを目的としています。 以下の手順を実行し、Windows Server 2003/Vista のセキュリティ ポリシーを確認します。</p>
  <ol>
    <li>Windows で <b>[ファイル名を指定して実行]</b> ダイアログ ボックスを開き、<b><i>secpol.msc</i></b> を入力して <b>[OK]</b> をクリックします。<li><b>[ローカル セキュリティ ポリシー]</b> ウィンドウで、 <b>[アカウント ポリシー]</b>-&gt;<b> [パスワードのポリシー]</b> に移動します。</li></li>
  </ol>
  <p>予測結果: オプションの <b>[パスワードは、複雑さの要件を満たす必要がある]</b> が無効になっている場合、システムには脆弱性があります (図 1 を参照)。</p>
  <p>ドメイン コントローラーで同じテストを実行し、ドメイン パスワード ポリシーを確認できることに留意してください。</p>
  <p>
    <span>
      <img src="|image|clip_image001.png" />
    </span>
  </p>
  <p>
    <b>
      <span>図 1 - Windows ローカル セキュリティ ポリシー エディター</span>
    </b>
  </p>
  <p>
    <b>
      <i>
        <span>
        </span>
      </i>
    </b>
  </p>
  <h2>
    <span>
      <em>HTTP パスワード クラッカーの実行による Web アプリケーションの弱いパスワードのテスト </em>
    </span>
  </h2>
  <p>このテストは、Credential 情報の総当たり攻撃 (Brute Force Attack)/辞書攻撃を実行してパスワード ポリシーをテストすることを目的としています。 以下の手順を実行して、辞書攻撃をテストします。</p>
  <ol>
    <li>Brutus をダウンロードおよびインストールします (<a href="http://www.hoobie.net/brutus/">http://www.hoobie.net/brutus/</a>)。<li>Brutus を実行します。 <li>ターゲット URL と認証型を入力します。 <li> <b>[Pass Mode] (パス モード) </b>ドロップダウン リストで、<b>[Word List] (ワード リスト) </b>を選択します。<li>選択したすべてのファイルを使用してワード リスト ファイルを変更します (ワード リストは辞書やルールのセットから作成できます)。 <li><b>[Start] (開始) </b>をクリックします。</li></li></li></li></li></li>
  </ol>
  <p>予測結果: Brutus に <b>[Positive Authentication Results] (ポジティブ認証の結果)</b> リスト ボックスとの適合が表示される場合、アプリケーションには脆弱性があります。 </p>
  <p>Credential 情報の総当たり攻撃 (Brute Force Attack)/辞書攻撃のテスト ケースの詳細については、<i>「認証情報の総当たり攻撃 (Brute Force Attack) バグのテスト方法」を参照してください。</i><i></i>&nbsp;</p>
  <p>
    <b>
      <span>&nbsp;</span>
    </b>
  </p>
  <h1>
    <span>結論</span>
  </h1>
  <p>弱いパスワードのテストでは、主にソフトウェア アプリケーションのパスワード ポリシーの強度を確認します。 このテストは、新しいパスワードの作成、アプリケーション データベースやシステム設定の分析、認証情報の総当たり攻撃 (Brute Force Attack)/辞書攻撃の実行によって行います。 基準を満たさないパスワードをテストで確認できるように、強力なパスワードの条件を理解しておく必要があります。また、アプリケーションの環境やプラットフォームに応じて適切なツールを使用する必要があります。 </p>
  <p />&nbsp;<br /><hr /><p /><div><div><p>[i] <b>How To: ASP.NET 2.0 でフォーム認証を保護する方法</b>: <a href="http://msdn.microsoft.com/en-us/library/ms998310.aspx">http://msdn.microsoft.com/ja-jp/library/ms998310.aspx</a></p><p>&nbsp;</p><p>&nbsp;</p></div></div>]]></Data>
  </Content>
</TeamMentor_Article>