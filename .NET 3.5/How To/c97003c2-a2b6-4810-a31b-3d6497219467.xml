<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="1721101236" Content_Hash="2116856757">
  <Metadata>
    <Id>c97003c2-a2b6-4810-a31b-3d6497219467</Id>
    <Library_Id>00000000-0000-0000-0000-000000000000</Library_Id>
    <Title>中間者攻撃バグのテスト方法</Title>
    <Category>ネットワーキング</Category>
    <Phase>テスト</Phase>
    <Technology> 任意</Technology>
    <Type>その方法</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<H1><SPAN>適用対象</SPAN></H1><UL><LI>コンピュータ ネットワーク</LI></UL><P><B><SPAN>&nbsp;</SPAN></B></P><H1><SPAN>概要</SPAN></H1><P>中間者 (MitM) 攻撃では、攻撃者が 2 つのネットワーク ノードの間に割り込みます。<SPAN></SPAN> たとえば、攻撃が成功したときに、ボブがアリスにパケットを送信すると、パケットは攻撃者であるイブを最初に通過します。イブは、改ざんするかどうかを決めてから、アリスにそのパケットを転送します。 パケットを受け取ったアリスは、それがボブから送信されたものであると思い込んでいます。 この攻撃は双方向性であるため、アリスがボブにパケットを送信する際にも同じシナリオが適用されます。 この攻撃は当初、公開鍵の暗号化システムを攻撃するために開発されたものですが、拡張されて、すべての形態の傍受を行うようになりました。攻撃者は、プロキシになりすまして、標的となる 2 つのノード間で交換されるパケットを支配します。 <SPAN>&nbsp;</SPAN><SPAN>&nbsp;</SPAN></P><P>次の手順に従って、MitM バグをテストします。</P><UL><LI>手順 1: 攻撃のシナリオを理解する<LI>手順 2: 原因と対策を分析する<LI>手順 3: テストと調査を開始する<LI>手順 4: 追加テストを実行する</LI></UL><P><B><SPAN>&nbsp;</SPAN></B></P><H1><SPAN>手順 1: 攻撃のシナリオを理解する</SPAN></H1><P>最初に、MitM 攻撃に関連する基本的な攻撃シナリオを理解する必要があります。</P><UL><LI>公開鍵暗号化 MitM 攻撃<LI>ネットワーク MitM 攻撃</LI></UL><H2><SPAN><EM>公開鍵暗号化 MitM 攻撃</EM></SPAN></H2><P>最初のシナリオは、公開鍵の暗号化と鍵の交換に関連しています。<SPAN></SPAN> 攻撃者は、攻撃を開始するために、2 人の犠牲者のうちの 1 人から公開鍵を奪う必要があります。 たとえば、傍受者であるイブは、アリスがボブに公開鍵を送信したにその鍵を奪います。 次に、イブは、自分がアリスになりすまして悪意のあるメッセージを作成し、自分の公開鍵を追加して、ボブに送信します。 このメッセージを受け取ったボブは返信しますが、その際にイブの鍵で暗号化したメッセージをアリスに送信します。 会話を傍受していたイブは、ボブからのメッセージを奪い、自分の (イブの) 鍵を使用して解読します。そして、最初に傍受したアリスの公開鍵を使用して再度暗号化してから、アリスに転送します。<SPAN></SPAN> このようにすると、攻撃を受けたアリスもボブも、自分たちが交換していたメッセージが攻撃者に改ざんされていたことに気が付きません。 </P><P>詳細: </P><OL><LI>攻撃者 (イブ) は、2 人のユーザー (アリスとボブ) の会話を傍受します。<LI>攻撃者は、アリスの公開鍵を読み取ります。<LI>攻撃者は、アリスから送信されたことを示すメッセージを作成します。ただし、この際に自分の (攻撃者イブの) 鍵を使用します。<LI>攻撃者は、ボブにメッセージを送信します。<LI>ボブは、メッセージを受け取って、攻撃者の鍵 (イブの鍵) で暗号化して返信します。<LI>攻撃者は、ボブからのメッセージを受け取って解読します。<LI>攻撃者は、(ステップ 2 で傍受した) アリスの鍵を使用してメッセージを暗号化します。<LI>攻撃者は、暗号化したメッセージをアリスに転送します。 </LI></OL><P>&nbsp;</P><H2><SPAN><EM>ネットワーク MitM 攻撃</EM></SPAN></H2><P>MitM 攻撃は、暗号化システムに対してのみ行われるとは限りません。 攻撃者は、2 人の犠牲者とは独立した接続を確立して、犠牲者が知らない間に 2 人のメッセージの中継を開始するようなすべてのネットワークで攻撃を行うことができます。 つまり、攻撃者は、2 人の犠牲者の間で目に見えないプロキシになります。 ネットワーク MitM 攻撃を実行する一般的な方法には、次のようなものがあります。</P><UL><LI>ARP ポイズニング<LI>DHCP スプーフィング<LI>DNS ポイズニング</LI></UL><P><B><I>ARP ポイズニング</I></B></P><P>攻撃者がネットワーク MitM 攻撃を実行する 1 つの方法は、犠牲者の各ノードに不当な Address Resolution Protocol (ARP) パケット (未承諾 ARP 返信) を送信して、ARP キャッシュへのポイズニングを試みることです。 具体的には、攻撃者は、リモートの犠牲者の IP アドレスの MAC アドレスを、攻撃者の MAC アドレスで置換しようとします。 <SPAN>&nbsp;</SPAN></P><P>一般的な MitM 攻撃では、たとえば、ワイヤレス ネットワークのコンピュータを攻撃する場合などは、標的ノードの一方が攻撃者の LAN 内にあり、もう一方がインターネット内にあります。 攻撃者は、2 人の犠牲者を攻撃するために、ローカルの犠牲者とローカルのゲートウェイに不当な ARP パケットを送信して、これら 2 つのキャッシュを ARP でポイズニングします。 ローカルの犠牲者の ARP キャッシュには、ゲートウェイの IP アドレスに対する攻撃者の MAC アドレスが含まれている必要があり、ゲートウェイの ARP キャッシュには、ローカルの犠牲者の IP アドレスに対する攻撃者の MAC アドレスが含まれている必要があります。 このようにして、標的ノードから (ゲートウェイを経由する) インターネットのすべての通信が、攻撃者を通過してしまいます。 </P><P>ARP ポイズニング攻撃は双方向性であることに注意してください。攻撃者は、インターネット サーバと犠牲者のホストの間に割り込むことができます。 攻撃が進行中の際、LAN の犠牲者のホストは、インターネット サーバと直接会話していると認識し、インターネット サーバは LAN ホストと直接会話していると認識しています。実際には、攻撃者が、ネットワーク トラフィックを傍受しています。</P><P>ARP ポイズニングの詳細は次のとおりです。</P><OL><LI>攻撃者は、同じローカル サブネットにある 2 つの標的ノードを選択します (たとえば、クライアントとゲートウェイ)。<LI>攻撃者は、既定のゲートウェイの IP アドレスと攻撃者の MAC アドレスを持つローカル ノードに、不当な ARP パケットを送信します。<LI>攻撃者は、クライアント ノードの IP アドレスと攻撃者の MAC アドレスを持つ既定の ゲートウェイに、不当な ARP パケットを送信します。<LI>攻撃者は、IP パケットのフィルタリングを開始します。これにより、標的となるローカル クライアント ノードとローカル ゲートウェイから送信されてくるパケットのみが傍受されます。 このフィルタリングは、犠牲者と他のインターネット トラフィックを攻撃者が区別するために必要です。<B><I>&nbsp;</I></B></LI></OL><P><B><I>DHCP スプーフィング</I></B></P><P>DHCP サーバが、既定の ゲートウェイ IP アドレスなどの IP 情報を、ローカル ネットワークに接続しているネットワーク ノードに提供します。 攻撃者は、DHCP サーバであるかのように動作して、偽の DHCP 確認を接続ノードに送信することができます。 接続ノードが、本物の DHCP サーバの前に攻撃者から DHCP 確認を受信した場合は、攻撃者が指定した情報を使用して、該当する IP 構成が解決されてしまいます。 攻撃者は、偽の DHCP 要求により、既定のゲートウェイ アドレスに自分の IP アドレスを指定して、ローカル ネットワーク ノードまたはリモート ネットワーク ノードのいずれかと接続ノードの間で MitM 攻撃を実行します。 <SPAN>&nbsp;</SPAN></P><P><I>この攻撃は単一方向性です。つまり、犠牲者のノードからインターネット上の犠牲者に送信されたパケットは傍受されますが、ローカルの犠牲者に戻されるパケットは傍受されません。</I></P><P>詳細は次のとおりです (犠牲者 A はローカルで、犠牲者 B はリモートです)。</P><OL><LI>攻撃者は、既定のゲートウェイ IP アドレスに対して攻撃者の IP アドレスを送信する DHCP サーバを起動します。<LI>犠牲者 A がネットワークに接続します (犠牲者は、DHCP を介して IP 情報を取得する必要があります)。<LI>攻撃者は、本物の DHCP サーバより先に、偽の DHCP 確認を犠牲者 A に送信します。 <LI>犠牲者 A は、DHCP 応答メッセージの中で、既定のゲートウェイとして攻撃者の IP を受信します。<LI>これで攻撃者が犠牲者 A のゲートウェイになったので、犠牲者 A から犠牲者 B に送信される IP パケットの傍受を開始します。</LI></OL><P><B><I>DNS ポイズニング</I></B></P><P>DNS サーバは、所定のドメイン/ホスト名に関連付けられている IP アドレスを提供します。 攻撃者は、有効なドメイン名の IP を攻撃者が支配する IP アドレスに置換することが可能です。 これにより、所定のドメイン/ホスト名を解決する犠牲者は、攻撃者のアドレスを含む応答を受信します。 <SPAN>&nbsp;</SPAN>攻撃者は、この手法を使用して、DNS サーバのクライアントに MitM 攻撃を実行します。 この手法を使用すると、複数のユーザーに同時に MitM 攻撃を実行することもできます。たとえば、フィッシング攻撃を実行できます。</P><P>詳細: </P><OL><LI>攻撃者は、犠牲者となるクライアントの DNS サーバを見つけます。<LI>攻撃者は、有効なドメイン/ホスト名 (<I>DN</I>) に対して悪意のある IP アドレス情報を送信する、悪意のある DNS サーバをセットアップします。<LI>攻撃者は、ステップ 1 で見つけた DNS サーバのクライアントを操作して、悪意のある DNS サーバに要求を送信させます。<LI>攻撃者は、サーバ クライアントが悪意のある DNS サーバに要求を送信するのを待ちます。<LI>攻撃者は、ドメイン名 (<I>DN</I>) が攻撃者の IP アドレスに対応していることを示す DNS 応答で返信します。<LI>攻撃者は、犠牲者のクライアントがドメイン名 (<I>DN</I>) に接続するのを待ちます。攻撃が成功した場合、犠牲者は、実際には攻撃者が支配するサーバに接続することになるので、攻撃者はこの接続を傍受できます。</LI></OL><P><B><I>&nbsp;</I></B></P><H1><SPAN>手順 2: 原因と対策を分析する</SPAN></H1><P>MitM の脆弱性テストの次のステップは、この脆弱性の原因とその防御方法を理解することです。</P><H2><EM>鍵と証明書を信頼する</EM></H2><P>上記の最初のシナリオに戻りましょう。<SPAN></SPAN> 攻撃者であるイブが MitM 攻撃を実行できるのは、ボブがイブの鍵をアリスの鍵として受け取るためです。<SPAN></SPAN> ボブが鍵を過度に信頼していることから問題が発生します。<SPAN></SPAN> 同じ問題が PKI (公開鍵基盤) の場合にも当てはまりますが、この場合に問題となるのは、鍵ではなく証明書です。 たとえば、あるアプリケーション サイトに接続する必要があるクライアントが、そのサイトが送信する証明書の使用を開始します。 攻撃者は会話を傍受して、それがアプリケーション サイトから送信されているように見せかける、偽の証明書をクライアントに送信します。 クライアントがこの偽の証明書を信用してしまうと、MitM 攻撃が可能になります。 </P><P>この問題のソリューションは、信頼できる CA (認証局) を利用して、証明書、デジタル署名、鍵がそれを使用しているユーザーに属していることを確認することです。 PKI システムに強力な認証を追加することにより、攻撃者の偽の証明書など、信頼されない CA 送信される証明書がすべて破棄されます。</P><P>インターネット通信で署名と暗号化に使用される一般的な手法 (SSL/TSL/SSH) は PKI を実装しているので、脆弱になる可能性があることに注意してください。 攻撃者は、犠牲者のブラウザーと SSL を利用しているアプリケーションの間のトラフィックを傍受する偽の SSL 証明書を作成して、上で説明したように犠牲者に送信することができます。 大部分のブラウザーは、ほとんどの場合に正当性が確認されていない新規の証明書が接続に必要であることを示す警告を表示します。 インターネット ユーザーがこの証明書を受け入れると、MitM 攻撃を開始することができます。 さらに、Internet Explorer やその他一般的なブラウザーの過去のバージョンに存在する脆弱性により、<SPAN>&nbsp;</SPAN>ユーザーから見えない MitM SSL 攻撃を許可されてしまいます。<SPAN>&nbsp;</SPAN>過去のバージョンでは、<SPAN>&nbsp;</SPAN> <I>CA (認証局)</I> が偽の証明書を信頼した場合、この警告が表示されませんでした。 [i]</P><H2><EM>悪意のあるネットワーク パケットを許可する</EM></H2><P>ネットワーク MitM 攻撃が存在するのは、攻撃者がワイヤレス LAN などのコンピュータ ネットワークで任意のパケットを送信して、ARP ポイズニングや DHCP スプーフィングなどの攻撃を実行できるからです。 ネットワーク管理者は、ネットワークを適切に構成して、適切なツールを配置することにより、このような攻撃のリスクを軽減できます。</P><P>たとえば、管理者は、一部のネットワーク スイッチに組み込まれている <I>DHCP スヌーピング</I>機能を使用して、ARP ポイズニングと DHCP スプーフィングの両方からコンピュータを保護できます [ii]。 この機能は、DHCP スプーフィングを防止するために、DHCP の要求と確認の両方が許可されているネットワーク ポートと、DHCP の要求のみが許可されているネットワーク ポートを区別します。 つまり、DHCP サーバであるかのように動作する攻撃者が送信する、偽の DHCP 確認がすべて拒否されます。 また、DHCP スヌーピングは、ARP パケットを監視して、DHCP スヌーピング時に構築される MAC と IP の対応表と比較することにより、パケットの正当性をチェックします。 ARP ポイズニングを防止するための他のツールには、UNIX ベースの Arpwatch や Windows ベースの XArp があります。</P><P>DNS ポイズニングを防止するには、DNS サーバに適切なネットワーク保護を追加して、DNS 応答に対する信頼度を下げる必要があります。 <I>DNSSEC</I> と呼ばれる安全な DNS を使用するというソリューションもあります。これは、暗号化された証明書を利用して、DNS メッセージの正当性を検証します。 <SPAN>&nbsp;</SPAN><SPAN>&nbsp;</SPAN>DNSSEC を配置すると、偽の DNS サーバは、正当な支配権を持たないドメインにおいて、所有者になりすますことができなくなります。</P><P>MitM 攻撃に対する防御策は継続的に修正されて、更新されていることに注意してください。 最新の MitM 防御策にアップデートすることをお勧めします。</P><P><SPAN>&nbsp;</SPAN></P><H1><SPAN>手順 3: テストと調査を開始する</SPAN></H1><P>これで、一般的な MitM 攻撃シナリオ、およびその原因と対抗策のレビューは終了です。次は、有効なネットワーク セキュリティ ツールを使用して、現在の環境に MitM 脆弱性が存在するかどうかをテストします。<SPAN></SPAN></P><P><B><I>ARP ポイズニングによる MitM テスト</I></B></P><P>次の手順に従って、ARP ポイズニングによる MitM 攻撃の受けやすさをテストします。</P><OL><LI>攻撃者のコンピュータに、Cain (<A href="http://www.oxid.it/cain.html">http://www.oxid.it/cain.html</A>) と Wireshark<SPAN> </SPAN>(<A href="http://www.wireshark.org/download.html">http://www.wireshark.org/download.html</A>) をダウンロードして、インストールします。<LI>Cain を実行します。 <LI>メニューの [<B>構成 (Configure)</B>] をクリックして、ネットワーク インターフェイス (ワイヤレス インターフェイスの場合もあります) を選択します。<LI> <B>[Sniffer] (スニッファー)</B> タブ、<B>[Hosts] (ホスト)</B> サブタブの順にクリックします。<LI>スニッファーを起動し、プラス (<B>+</B>) 記号をクリックします。<LI>一定範囲の IP を選択してそれぞれの MAC アドレスをスキャンし (範囲内にターゲット ボックスも含めます)、<B>[OK]</B> をクリックします。ゲートウェイの IP と犠牲者の IP (およびそれらの MAC アドレス) が、ホストのリストに表示されます。<LI><B>[ARP poisoning] (ARP ポイズニング)</B> サブタブをクリックします。<LI>プラス (<B>+</B>) 記号をクリックし、攻撃対象からの ARP ルートをゲートウェイに追加します。<LI>[ARP] ボタンを押し、ARP ポイズニング攻撃を開始します。 犠牲者がアクティブになると、そのステータスが [アイドル (idle)] から [ポイズニング (poisoning)] に変わります。傍受されているパケットが下のペインに表示されます (図 1 を参照)。<LI>Wireshark を起動し、Cain で選択したインターフェイスからのネットワーク トラフィックのキャプチャーを開始します。</LI></OL><P>予想される結果: ARP ポイズニング攻撃が成功したかどうかを確認するための最初のチェック項目は、犠牲者のコンピュータ (Windows または UNIX) で <I>arp -a</I> コマンドを実行することです。 攻撃が実行されると、ゲートウェイのエントリが、ゲートウェイの本物の MAC ではなく、攻撃者のコンピュータの MAC になるはずです。 たとえば、<I>arp -a</I> を実行する Windows の攻撃前の状態は次のとおりです。</P><pre><SPAN>C:\&gt;arp -a</SPAN></pre><pre><SPAN>Interface: 192.168.1.33 --- 0x8<BR>&nbsp;Internet Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IP Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 種類<BR>&nbsp;192.168.1.1&nbsp;&nbsp;&nbsp;&nbsp; 00-13-49-5c-e3-de&nbsp; dynamic<BR>&nbsp;192.168.1.255&nbsp;&nbsp;&nbsp;ff-ff-ff-ff-ff-ff&nbsp; static<BR>&nbsp;224.0.0.22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 01-00-5e-00-00-16&nbsp; static</SPAN>&nbsp;</pre><P>攻撃が成功すると、犠牲者の ARP キャッシュのゲートウェイ エントリが変更されて、 攻撃者の MAC アドレスと同じになります。</P><pre><SPAN>C:\&gt;arp -a<BR>&nbsp;<BR>Interface: 192.168.1.33 --- 0x8<BR>&nbsp;Internet Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IP Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 種類<BR>&nbsp;192.168.1.1&nbsp;&nbsp;&nbsp;&nbsp;<STRONG> 00-1b-77-b2-73-f2</STRONG>&nbsp; dynamic<BR>&nbsp;192.168.1.255&nbsp;&nbsp; ff-ff-ff-ff-ff-ff&nbsp; static<BR>&nbsp;224.0.0.22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 01-00-5e-00-00-16&nbsp; static</SPAN>&nbsp;</pre><P>ARP ポイズニング攻撃が成功すると、Cain と Wireshark の両方に表示されます。 Cain では、[Sniffer] (スニッファー) &gt; [ARP] タブの下側のペインにスニッフィングされたパケットが表示されます。 Wireshark を使用して、パケットの実際の内容を確認します (図 2 を参照)。</P><DIV><B><SPAN>図 1 – Cain を使用して、犠牲者とゲートウェイの間の接続を ARP ポイズニングする</SPAN></B></DIV><DIV><B><SPAN></SPAN></B>&nbsp;</DIV><DIV><B><SPAN><SPAN>図 2 – Wireshark を使用して、スニッフィングされたパケットの内容を確認する</SPAN></SPAN></B></DIV><DIV><B><SPAN></SPAN></B>&nbsp;</DIV><DIV><SPAN><STRONG>&nbsp;</STRONG></DIV><P>注記: ARP ポイズニングに関する詳細については、記事「<I>ARP ポイズニングのテスト方法</I>」を参照してください。</P><H2><EM>DHCP スプーフィングによる MitM のテスト</EM></H2><P>次の手順に従って、<SPAN></SPAN>DHCP スプーフィングによる MitM 攻撃の受けやすさをテストします (UNIX システムからテストします)。</P><OL><LI>攻撃者のシステムで <SPAN>ifconfig</SPAN> コマンドを実行して、現在の IP アドレスとネットワーク マスクを記録します。 システムの DNS リゾルバーの IP も記録します  (UNIX システムでは、DNS サーバ情報は通常、/etc/resolv.conf ファイルにあります)。<LI>攻撃者のシステムに、Ettercap (<A href="http://ettercap.sourceforge.net/download.php">http://ettercap.sourceforge.net/download.php</A>) をダウンロードして、インストールします。<LI>簡単のため、GUI オプションで Ettercap を実行します (ettercap -G.)。<SPAN></SPAN><LI>Ettercap から標的を削除します (これは DHCP スプーフィングに必要です)。<LI>メイン メニューから <SPAN>[Mitm] &gt; [DHCP スプーフィング (DHCP Spoofing)]</SPAN> に移動します。<LI>DHCP スプーフィング サーバ情報に入力して、図 3 に示すように、IP プールに 15 個の IP の範囲を指定します。<LI>[OK] をクリックして攻撃を開始します。<LI>犠牲者のコンピュータ (Windows) で、ipconfig /release を使用して、現在の DHCP リースを解放します。<LI>ipconfig /renew を実行して、DHCP サーバにリースを要求します。 これが攻撃のトリガーとなります。<LI>犠牲者のコンピュータで、FTP サーバに接続して、ログイン Credential 情報を入力します。</LI></OL><P>予想される結果: ステップ 8 で <I>ipconfig /renew</I> コマンドを実行したことにより、犠牲者のマシンの既定の ゲートウェイが攻撃者の IP アドレスに設定されると、MitM 攻撃は成功します。 また、攻撃が成功した場合、Ettercap (または、攻撃者のマシン上にあるその他のツール) は、ステップ 9 で入力されたユーザー名とパスワード、およびインターネットまたはネットワークに宛てられた、ローカル サブネット以外の IP トラフィックを取得できます。</P><DIV></SPAN><B><SPAN>図 3 – Ettercap を使用して、DHCP スプーフィング攻撃を実行する</SPAN></B></DIV><H2><EM>DNS スプーフィングによる MitM のテスト</EM> </H2><P>次の手順に従って、DNS サーバ スプーフィング (クライアント リゾルバーのポイズニング) による MitM 攻撃の受けやすさをテストします。</P><OL><LI>標的となる DNS サーバを選択します。<LI>標的の DNS サーバを使用するように、クライアントをセットアップします。<LI>特別に作成した応答を送信するように、攻撃者が支配する DNS サーバをセットアップします (ステップ 6 を参照)。<LI>攻撃者が支配する Web サーバをセットアップします。 <LI>標的の DNS サーバ内から攻撃者の DNS サーバに対して DNS ルックアップ クエリを開始するトリガーをセットアップします。 <LI>攻撃者の DNS サーバを使用して、DNS パケットに情報を追加し、クエリに応答します。 将来の要求をすべて .COM ドメインに宛て、(ステップ 4 の) 攻撃者の Web サーバの IP アドレスに解決するように、DNS パケットの “<B><SPAN>回答</SPAN></B>”、”<B><SPAN>権限ネームサーバ</SPAN></B>”、”<B><SPAN>追加レコード</SPAN></B>” フィールドを設定します。 <LI>ステップ 2 の Web ブラウザーを開き、.COM ドメインに移動します。</LI></OL><P>予想される結果: Web ブラウザーに、攻撃者が支配する Web サーバの内容が表示された場合、MitM 攻撃は成功です。</P><P>注記: DNS ポイズニングに関する詳細については、記事「<I>DNS ポイズニングのテスト方法</I>」を参照してください。</P><P><B><I>&nbsp;</I></B></P><P><B><I>HTTPS 接続のスニッフィング</I></B></P><P>SSL と SSH の MitM テストは、Ettercap と Cain を使用して実行することもできます。 いずれのプログラムでも、転送時に偽の証明書が自動的に作成されて、本物の証明書と置き換わります。</P><P>Ettercap では、次の指示に従って、HTTPS 接続をスニッフィングします。</P><OL><LI>攻撃者のコンピュータ (UNIX/Linux) に、Ettercap をダウンロードして、インストールします。<LI>テキスト エディターで <I>/usr/local/etc/etter.conf</I> 構成ファイルを開きます。<LI>下の表に示すように、両方の <I>redir</I> コマンドのコメントを外します。<LI>ARP ポイズニングを使用して、MitM 攻撃を実行します。 Ettercap ホストで、犠牲者の IP と既定のゲートウェイの IP を選択します。<LI>ARP ポイズニング攻撃を実行します。<LI>犠牲者のコンピュータで、ログインに HTTPS を使用する Gmail、または SSL ホストにログインします。<LI>証明書警告ボックスにプロンプトが表示されたら、[OK] をクリックします (図 4 を参照)。<LI>ユーザー名とパスワードを入力して、ログイン フォームを送信します。</LI></OL><P><TABLE><TBODY><TR><TD>#redir_command_on = "iptables -t nat -A PREROUTING -i %iface -p tcp --dport %port -j REDIRECT --to-port %rport"<BR>#redir_command_off = "iptables -t nat -D PREROUTING -i %iface -p tcp --dport %port -j REDIRECT --to-port %rport"<BR>を<BR>&nbsp;<BR>redir_command_on = "iptables -t nat -A PREROUTING -i %iface -p tcp --dport %port -j REDIRECT --to-port %rport"<BR>redir_command_off = "iptables -t nat -D PREROUTING -i %iface -p tcp --dport %port -j REDIRECT --to-port %rport"</TD></TR></TBODY></TABLE></P><P>&nbsp;<SPAN><STRONG>図 4 – 犠牲者は、HTTPS MitM 攻撃時に証明書警告を受け取る</STRONG></SPAN></P><P><SPAN><STRONG></STRONG></SPAN>&nbsp;</P><P>予想される結果: Ettercap が犠牲者のユーザー名とパスワードを取得すると、MitM 攻撃は成功です。 SSL 証明書を調べて、取得されたことが Web ブラウザーにプロンプトで表示された場合も、攻撃が成功しています。</P><P>&nbsp;</P><SPAN><H1><SPAN>手順 4: 追加テストを実行する</SPAN></H1><P>MitM 攻撃のテストの最終ステップとして、付加的な攻撃手法に対応して、攻撃が成功した後の処理を決定します。</P><H2><SPAN><EM>さまざまな攻撃手法を使用する</EM></SPAN></H2><P>この記事では、ネットワーク MitM 攻撃の一般的な 3 つの形態について説明しています。つまり、ARP ポイズニング、DNS スプーフィング (DNS キャッシュ ポイズニング手法を採用することで有効になります)、DHCP スプーフィングです。 ポート スティーリングなど、付加的な MitM 攻撃に対応します。 ポート スティーリングでは、不当な ARP パケットを使用して、ネットワーク スイッチおよびスイッチのCAM テーブルに大量の情報を送信します。これにより、スイッチは、犠牲者に宛てられたパケットをスイッチ上のすべてのコンピュータに転送します (このため、スイッチが効果的にハブに変わります)。 <I>Ettercap</I> および <I>macoff</I> と呼ばれる別のユーティリティを使用して、ポート スティーリング攻撃を実行することができます。その他の攻撃には、ICMP リダイレクション、ルート マングリング、トラフィック トンネリング、IP スプーフィング [i] があります。</P><P><I><SPAN><STRONG></STRONG></SPAN></I></P><H2><SPAN><EM>攻撃が成功した後の処理</EM></SPAN></H2><P>MitM 攻撃が成功して、2 つの犠牲者のノードの間に割り込むことができたら、別の攻撃を試すことができるようになります。この攻撃には、ネットワーク スニッフィング、ハイジャッキング、パケット インジェクション、パケット フィルタリングなどがあります。 Ettercap は、さまざまな攻撃に利用できる 1 セットのフィルターを提供します。たとえば、特定のユーザーからパケットを欠落させたり、DoS 攻撃を実行したり、安全性が確保されていない接続を使用するように SSH のバージョンをダウングレードさせたりできます。 詳細については、Ettercap で MitM 攻撃に関する全容を解明するビデオをご覧ください [ii]。 </P><P><SPAN><STRONG>&nbsp;</STRONG></SPAN></P><H1><SPAN>結論</SPAN></H1><P>一般的に、中間者攻撃は、ネットワークに関連する攻撃であり、ネットワーク接続をスニッフィングしたり、プロキシとして装って、犠牲者に気付かれずにネットワーク接続をハイジャックしたりするのに使用されます。 コンピュータ ネットワークでこの脆弱性が存在するかどうかをテストするには、最初に関連する一般的な攻撃シナリオについて理解する必要があります。 次に、MitM 攻撃の原因と、それに対応する防御方法について理解します。<SPAN></SPAN> Cain や Ettercap などのネットワーク MitM ツールを利用して、HTTPS 接続のスニッフィングを含む、さまざまな攻撃シナリオを実行することをお勧めします。 攻撃者は、2 つのホスト間に割り込むと、適切なツールを利用して、スニッフィング、ハイジャッキング、コマンド インジェクションなど、さまざまな種類の攻撃を実行できるようになります。<SPAN></SPAN></P><P><U><SPAN><SPAN><STRONG></STRONG></SPAN></SPAN></U></P><DIV><BR><STRONG><HR></STRONG><DIV><P>[i]  <SPAN><STRONG>中間者攻撃</STRONG> (Alberto Ornaghi、Marco Valleri)。 </SPAN><SPAN>ブラックハット ヨーロッパ 2003、</SPAN><A href="http://www.blackhat.com/presentations/bh-europe-03/bh-europe-03-valleri.pdf">http://www.blackhat.com/presentations/bh-europe-03/bh-europe-03-valleri.pdf</A></P></DIV><DIV><P>[ii] <STRONG>エピソード 20 – Ettercap</STRONG> の全容を解明する <A href="http://infinityexists.com/videos/episode20/">http://infinityexists.com/videos/episode20/</A></P><P>&nbsp;</P></DIV></DIV></SPAN><DIV>&nbsp;</DIV><DIV>&nbsp;</DIV>]]></Data>
  </Content>
</TeamMentor_Article>