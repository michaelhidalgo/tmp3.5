<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="-484939964" Content_Hash="1907402930">
  <Metadata>
    <Id>dc172f55-185d-4c34-996a-1e368662f3f7</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>例外情報漏えい攻撃</Title>
    <Category>例外管理</Category>
    <Phase>実装</Phase>
    <Technology> 任意</Technology>
    <Type>攻撃</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>1</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<br />
  <br />
  <h1>適用先</h1>
  <p>すべてのアプリケーション。</p>
  <h1>説明</h1>
  <p>攻撃者はアプリケーションのエラー情報を利用し、そのアプリケーションへの攻撃能力を高めることができます。</p>
  <p>コンピュータ プログラムのほとんどすべてのメソッド呼び出しが、操作の状態に関するフィードバックを呼び出しメソッドに提供します。 このフィードバックは関数の戻り値、呼び出されたメソッドがスローした例外、またはエラー文字列などです。 このフィードバックに基づき、アプリケーションは重要な結果 (通常は成功または失敗) についてユーザーに通知するべきかどうかを決定します。 エラーが発生すると、一部のアプリケーションは内部エラー メッセージをユーザーにエコーします。 この機能は問題のデバッグには役立ちますが、情報漏えい問題につながる可能性があります。 攻撃者はこの技術情報を利用し、製品のバックエンド プロセスについてより良く理解し、それに対するさらに悪意のある攻撃を作ります。</p>
  <h1>影響</h1>
  <ul>
    <li>アプリケーションの内部機能とリソースに関する情報の漏えい。 <li>攻撃者によるさらに深刻な攻撃につながる可能性があります。</li></li>
  </ul>
  <h1>脆弱性</h1>
  <ul>
    <li>エラー例外により返された情報をユーザーに提供すること。</li>
  </ul>
  <h1>対策</h1>
  <ul>
    <li>
      <strong>一般的なエラー メッセージを使用する</strong>: 内部エラー メッセージは決してユーザーに表示しないようにすることをお勧めします。 代わりに、各エラーまたはエラー クラスに関して、一般的なエラー メッセージを書き込み、ユーザーに表示してください。 一般的なエラー メッセージであれば、問題についてユーザーに適切に通知しますが、攻撃者に利用される恐れのある余分な情報は漏えいしません。 <li><strong>すべての例外を処理する</strong>: 汎用の例外ハンドラーを使用して、開発者が見落とすような例外をキャッチするようにしてください</li></li>
  </ul>
  <h1>例</h1>
  <p>現実世界の例を考えてください。Mozilla コード ベースを基盤とする Web ブラウザーが、Web ブラウザーから Web サーバに返される例外情報で非常に多くの情報を開示していました。 <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=267645">バグ 267645</a> では、Web サイトが不適切なパラメータでメソッドを呼び出した場合に例外がスローされる状況について説明しています。 この例外メッセージはメソッドを呼び出した Web サイトに送り返されますが、次の情報を含んでいます。</p>
  <pre>&amp;#91;Exception... "Not enough arguments &amp;#91;nsIPromptService.alert&amp;#93;"  nsresult:"0x80570001 (NS_ERROR_XPC_NOT_ENOUGH_ARGS)"  location: "JS frame ::file:///C:/Program&amp;#37;20Files/mozilla.org/Mozilla/components/nsSidebar.js ::anonymous :: line 266"  data: no&amp;#93;</pre>
  <p>これを見ると、アプリケーションのインストール パスが Web サイトに露呈されることがわかるでしょう。 同じ問題の別の形態も見つかりました。ユーザー プロファイル パス (ユーザー名を含む) も Web サイトに漏えいされました。 インストール パスやプロファイル パスの漏えいは深刻な問題のように見えないかもしれませんが、攻撃者はこの情報を利用してユーザーに標的を定めた攻撃を作ることができます。</p>
  <p>この問題は Mozilla では現在、解決されています。同じ例外がトリガーされると次の一般エラーがユーザーに表示されます。</p>
  <pre>&amp;#91;object Error&amp;#93;</pre>
  <p>このエラー メッセージは、何が悪かったのかをユーザーまたは Web サイトに正確に通知しませんが、エラーが発生したことは伝え、状況について適切なレベルの詳細が示されます。</p>
  <h1>その他のリソース</h1>
  <h1>関連する項目</h1>
  <ul>
    <li>
      <a href="/article/74be8616-ad22-4d1d-a7fc-8ff3d145fc61">ガイドライン: クライアントに例外詳細を開示しない</a>
      <li>
        <a href="/article/33a894ce-2061-4741-be92-1d063c9cf057">ガイドライン: 未処理の例外に対してグローバル例外ハンドラーを利用する</a>
      </li>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>