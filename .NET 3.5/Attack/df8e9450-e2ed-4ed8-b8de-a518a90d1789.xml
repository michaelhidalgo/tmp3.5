<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="82462895" Content_Hash="-1471810658">
  <Metadata>
    <Id>df8e9450-e2ed-4ed8-b8de-a518a90d1789</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>ファイル名とパスの操作攻撃</Title>
    <Category>入力とデータの検証</Category>
    <Phase>実装</Phase>
    <Technology> 任意</Technology>
    <Type>攻撃</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>1</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<br />
  <br />
  <h1>適用先</h1>
  <p>ユーザー入力を使用してファイル名またはパスを構築してからファイル リソースにアクセスするすべてのアプリケーション。</p>
  <h1>説明</h1>
  <p>ユーザー入力を利用してファイル名またはパスを構築する場合、意図しないファイルや保護されたファイルが代わりに読み取られ、改ざんされ、実行されるようなフォーマットである場合があります。 これは一般的に、正規化による課題または代替データ ストリームをエクスプロイトすることで達成されます。 コマンド インジェクションも場合によっては可能であり、攻撃者は任意のコマンドを実行できます。 アプリケーションを高い特権で実行している場合には、このような脆弱性の影響はより深刻です。</p>
  <h1>影響</h1>
  <ul>
    <li>保護されているファイルからのデータ読み取りまたは書き込み。 以下のような例があります。<ul><li>アプリケーションに別のユーザーの設定またはデータ ファイルを読み込ませる、または上書きさせる。 <li>保護されているアプリケーションまたはシステム ログ ファイルから読み取る、またはそれに書き込む。</li></li></ul></li>
  </ul>
  <h1>脆弱性</h1>
  <ul>
    <li>ユーザー入力の検証を行っていない、または不適切である。</li>
  </ul>
  <h1>対策</h1>
  <ul>
    <li>ファイルに適切なアクセス許可を与え、承認されたユーザーだけが機密ファイルにアクセスできるようにします。 <li>ファイルに詳細なアクセス許可を設定できない場合、ファイル名とパスを完全に解決し、そのアクセスを検証します。 <li>ファイル名をユーザーが入力する必要のないソフトウェアを設計することで問題を回避します。 簡単なソリューションの 1 つは、一意の無作為なファイル名を生成し、辞書を利用してそのファイル名とユーザーが入力したラベルを関連付けることです。</li></li></li>
  </ul>
  <h1>その他のリソース</h1>
  <ul>
    <li>パス操作に関する詳細は、<a href="http://www.owasp.org/index.php/Path_Manipulation">OWASP Path Manipulation</a>の記事を参照してください。 </li>
  </ul>
  <h1>関連する項目</h1>
  <ul>
    <li>
      <a href="/article/ce899ba6-8ae2-4494-8706-ce863fae58e7">ガイドライン: ユーザーが提供するファイル名とパスの入力をすべてフィルター処理する</a>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>