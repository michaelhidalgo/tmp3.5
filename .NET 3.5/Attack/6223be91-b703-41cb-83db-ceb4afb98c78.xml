<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="1497597469" Content_Hash="95266088">
  <Metadata>
    <Id>6223be91-b703-41cb-83db-ceb4afb98c78</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>弱いキーストア保護攻撃</Title>
    <Category>暗号化</Category>
    <Phase>実装</Phase>
    <Technology> 任意</Technology>
    <Type>攻撃</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<br />
  <br />
  <h1>適用先</h1>
  <p>暗号化を利用するアプリケーション。</p>
  <h1>説明</h1>
  <p>キーストアとは、ディスク上またはメモリ内の安全な場所であり、暗号化鍵や信頼されている証明書の保存に使用されます。 一般的に、これらの鍵はマシンに結びつけられ、特定のアプリケーションでのみ使用できます。 アプリケーションが弱いキーストアを利用している場合、適切な Credential 情報なしでキーストアから鍵や証明書がリカバリされることがあります。</p>
  <h1>影響</h1>
  <ul>
    <li>
      <strong>情報漏えい:</strong> 攻撃者はアプリケーションが使用する鍵にアクセスでき、アプリケーションが暗号化で守ろうとするデータを解読したり、アプリケーションになりすまして、そのアプリケーション自体やそれらの鍵で暗号化されたデータを信頼するその他のシステムをだましたりします。 <li><strong>特権の昇格:</strong> 攻撃者は新しい鍵をキーストアに追加したり、既存の鍵を改ざんしたりすることもできます。 この結果、アプリケーションは攻撃者が支配する鍵を信頼して、機密の操作や他のシステムとの通信を実行します。</li></li>
  </ul>
  <h1>脆弱性</h1>
  <ul>
    <li>
      <strong>弱いキーストアの使用</strong>: 多くのオペレーティング環境でさまざまなキーストアが提供されています。その中には、レガシー システムの保存上の理由だけで存在するものもあります。 古いキーストアや貧弱な実装のサードパーティのキーストアを利用すると、キーストアの侵害につながる可能性があります。 <li><strong>キーストアは強力だが設定が不適切</strong>: 多くのキーストアで、さまざまな設定オプションがサポートされ、幅広いセキュリティの選択肢があります。 キーストアの特性を理解することがそれを安全に使用するために不可欠です。 <li><strong>カスタムまたは自家製のキーストアの実装:</strong> 強力なキーストアを作成することは非常に難しく、オペレーティング環境のサポートを必要とします。 キーストアの自作はカスタムの暗号化アルゴリズムやプロトコルの実装と同じレベルであると考えるべきで、避けることをお勧めします。 <li><strong>鍵の処理が不適切:</strong> アプリケーションで鍵をストアに追加するとき、または鍵をストアから読み取って利用するときの鍵の管理方法がずさんであれば、キーストア自体が強力でも、鍵が侵害され、漏えいすることがあります。</li></li></li></li>
  </ul>
  <h1>対策</h1>
  <ul>
    <li>
      <p>
        <strong>強力なキーストアを使用する:</strong> 使用するべきキーストアはプラットフォームにより変わります。 Java の場合、<strong>KeyStore</strong> クラスを利用します。 Windows では、DPAPI を利用します。 パッチを含む、最新版のキーストアを使用してください。</p>
      <li>
        <p>
          <strong>キーストアを正しく構成する:</strong> ご使用の環境でキーストアを適切に設定する方法を理解してください。 キーストアの ACL を可能な限り厳密にロックダウンし、同時にシステムが変わらず機能するようにします。 たとえば、初期インストール後は、多くの場合、鍵をキーストアに追加したり、キーストアのアクセスを変更したりする権限をアプリケーションは必要としません。 可能であれば、インストール後にアプリケーションにそれらの権限を放棄させます。 手作業でストアから鍵をエクスポートしたり、ビットを読み取ったりする代わりに、可能であれば、保護されたキーストアの対象範囲内ですべての暗号化操作が行われるようにします。 これができ、また、キーストアをさらにロックダウンできたら、それらの操作をキーストアで実行できないようにします。 キーストアの鍵の保護に利用する鍵やアルゴリズムが選択できる場合、それらが十分に強力であることを確認します。</p>
        <li>
          <p>
            <strong>鍵を適切に処理する:</strong> 鍵を慎重に扱います。 鍵はなるべく早くキーストアに置き、なるべく遅い段階で読み取ります。 必要ないときは鍵をメモリに残さないでください。鍵を読み込んだメモリは適切に消去してください。 鍵データを扱うときは不変オブジェクトやガーベジ コレクションに注意してください。 平文の鍵をディスクに決して書き込まないでください。 特に、機微データのあるメモリは、スワップに書き込まれないように固定してください。</p>
        </li>
      </li>
    </li>
  </ul>
  <h1>その他のリソース</h1>
  <ul>
    <li>
      <a href="http://java.sun.com/j2se/1.4.2/docs/api/java/security/KeyStore.html">http://java.sun.com/j2se/1.4.2/docs/api/java/security/KeyStore.html</a>
      <li>
        <a href="http://msdn2.microsoft.com/en-us/library/ms995355.aspx">http://msdn2.microsoft.com/en-us/library/ms995355.aspx</a>
      </li>
    </li>
  </ul>
  <h1>関連する項目</h1>
  <ul>
    <li>
      <a href="/article/cd4ccbbb-be9c-4ff4-8b20-d116819b634b">ガイドライン: 安全な鍵の保管場所を使用する</a>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>