<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="-1025663532" Content_Hash="-1919953352">
  <Metadata>
    <Id>53612792-aa7d-4022-b472-3e1c7010cc48</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>全認証 Cookie の HttpOnlyCookies 属性設定</Title>
    <Category>認証</Category>
    <Phase>実装</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>ガイドライン</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>行うべき事柄</h1>
  <p>全認証 Cookie の <b>httpOnlyAttribute</b> を「正」に設定してクライアント側のスクリプトによる Cookie へのアクセスを防ぎます。 </p>
  <h1>理由</h1>
  <p>認証 Cookie はサーバ側のみでユーザーからの要求を認証するために使用します： 認証 Cookie はクライアントでは絶対に使用されません。&nbsp; クライアントがスクリプト経由でアクセスすることによって、サイトでスクリプト インジェクション攻撃が発生しても攻撃者はユーザーの Cookie を盗んだり、ユーザーを直接エミュレートすることもできません。&nbsp; それでもインジェクション攻撃はアカウントに完全なセキュリティ侵害を起こす可能性がありますので、認証 Cookie を提供されなくすることでその影響を軽減することができます。 </p>
  <h1>状況</h1>
  <p>認証 Cookie を使用するシステムは全て、<b>httpOnlyCookies </b> 属性を設定しなければなりません。 </p>
  <h1>対策</h1>
  <p>認証 Cookie の <b>httpOnlyCookies</b> 属性を設定してください。&nbsp; Internet Explorer 6 サービス パック 1 以降ではこの属性がサポートされており、クライアント側のスクリプトが <b>document.cookie</b> 属性から Cookie にアクセスすることを防いでいます。&nbsp; .NET Framework の <b>System.Net.Cookie</b> クラスは <b>HttpOnly</b> 属性プロパティをサポートしています。&nbsp; このプロパティはプログラムで設定したり、アプリケーションの Web.config ファイルにある <b>&lt;httpCookies&gt;</b> エレメントで設定することができます。 デフォルトでは <b>HttpOnly</b> Cookie プロパティは設定されません。 Cookie に <b>HttpOnly</b> プロパティを設定するためには、次のエントリをアプリケーションの Web.config ファイルに追加します。 </p>
 <pre>&lt;system.web&gt;...<br />  &lt;httpCookies httpOnlyCookies="true" requireSSL="false" topic="" /&gt;...<br />&lt;/system.web&gt;</pre>
  <p>
    <strong>注記:</strong> &nbsp; &nbsp; 全てのブラウザが HttpOnly 属性をサポートしているわけではありませんが、この保護を回避することは可能な場合が多くあります。&nbsp; これは絶対的なセキュリティ対策として頼るべきではありません。</p>
  <h1>問題の例</h1>
  <p>あるウェブ アプリケーションに既存のクロスサイト スクリプティングの欠陥があり、 Cookie に HttpOnly 属性が設定されません。&nbsp; ユーザーが攻撃を受けると、攻撃者はユーザーの認証ならびに認可 Cookie を簡単に読み出すことができ、ユーザーを偽装できるようになってしまいます。</p>
  <p />
  <h1>ソリューションの例</h1>
  <p>あるウェブ アプリケーションに既存のクロスサイト スクリプティングの欠陥がありますが、 Cookie に HttpOnly 属性は設定されます。&nbsp; ユーザーが攻撃を受けると、攻撃者はユーザーの認証ならびに認可 Cookie を簡単に読み出すことができず、ユーザーの偽装を防ぐことができます。</p>
  <p />
  <hr />
  <p>出典: Microsoft patterns & practices guidance </p>]]></Data>
  </Content>
</TeamMentor_Article>