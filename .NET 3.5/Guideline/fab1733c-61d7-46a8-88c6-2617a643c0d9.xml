<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="-796276344" Content_Hash="468563351">
  <Metadata>
    <Id>fab1733c-61d7-46a8-88c6-2617a643c0d9</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>データベース アクセスに最小限の特権アカウントを使用する</Title>
    <Category>データ アクセス</Category>
    <Phase>実装</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>ガイドライン</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>行うべき事柄</h1>
  <p>アプリケーションは、できる限り最小特権のアカウントを使用してデータベースへの接続を行わなければなりません。 </p>
  <h1>理由</h1>
  <p>最小限の特権アカウントでデータベースに接続すると、SQLインジェクション攻撃を受けた場合や、攻撃者がアカウントの Credential 情報を入手した場合に被る損害が制限されます。 </p>
  <h1>状況</h1>
  <p>認証メカニズムに関係なく、データベース内のアカウントのアクセス許可を常に制限します。 アカウントはアプリケーションのオペレーション制約を満たすために必要な最小特権を有します。 </p>
  <h1>対策</h1>
  <p>
    <b>Windows 認証を使用して SQL Server へ接続する</b> ガイドラインに従う場合には、オペレーティング システム権限が制限され、Windows リソースへのアクセスが制限された最小限の特権アカウントを使用します。</p>
  <p>SQL 認証を使用する場合には、以下のパターンを使用してデータベースにおけるアクセス許可を制限します:</p>
  <ol>
    <li>アカウントの SQL Server ログインを作成します。 <li>必要なデータベースでのデータベースユーザーへのログインをマップしてください｡ <li>データベースロールにデータベースユーザーを置いてください｡ <li>データベースロールに対する限定されたアクセス許可を、アプリケーションがアクセスする必要のあるストアド プロシージャまたはテーブルにのみ与えてください。</li></li></li></li>
  </ol>
  <p>アプリケーションのデータベース アカウントに最小特権の原則を適用するには:</p>
  <ol>
    <li>
      <p>
        <strong>すべてのデータベース アカウントを識別します。</strong> アプリケーションのすべてのデータベース アカウントと、各アカウントの接続先となるそれぞれのサーバとデータベースでリストを作成してください。 </p>
      <li>
        <p>
          <strong>各データベース アカウントに関連付けられる役割を識別します。</strong> 各アカウントが実行する機能の目的を理解してください。 テーブルを使用して、すべてのアカウントをそのアカウントが必要とする特権と対応付けてください。 データベース サーバでは、アプリケーションのアカウントは管理者権限を持つことはできません。 </p>
        <li>
          <p>
            <strong>適切な特権を設定します。</strong> すべてのアカウントとその役割を識別したら、各データベース サーバーで適切な特権を設定します。 各アカウントが割り当てられたタスクのみを実行するのに十分な特権を持つようにします。 余分な特権は削除します。 </p>
          <p>下記のガイドラインを使用して適切なアクセス許可を決定してください。</p>
          <ul>
            <li>理想としては、直接のテーブル アクセスを与えず、選択されたストアド プロシージャのみにアクセスを制限してください。 <li>テーブル アクセスを与える必要がある場合は、アプリケーションが必要とする最小限のアクセスを与えてください。 たとえば、読み取りアクセスで十分な場合、更新アクセスを与えないでください。 <li>データベース ユーザーにアクセス許可を直接与えるのを避けるには、データベース ロールを使用してください。 こうするとデータベース ユーザー名が変更される可能性がなくなります。 たとえば、データベース ユーザー名を変更する場合は、新しいユーザーをデータベース ロールに追加して既存のユーザーを削除するだけで変更が可能です。 <li>アプリケーションが数多くのデータベースに影響を与える必要がある場合や、アプリケーションが複雑な場合は、データベース アクセスを異なるアカウントに区分することによって特権を分割することを検討してください。 たとえば、新しいアプリケーション ユーザーのセットアップに必要なアクセス許可のみを持つデータベース ユーザーを作成し、ついで、正当なアプリケーション ユーザーが許可した動作を実行する別のデータベース ユーザーを作成します。</li></li></li></li>
          </ul>
        </li>
      </li>
    </li>
  </ol>
  <h1>問題の例</h1>
  <p>以下のスニペットに、データベース アカウントとそのアクセス許可の一部のリストを示します。 残念ながら、アプリケーションのアカウント (myapp) は必要以上の特権を付与されています。 攻撃者がアプリケーションのデータベース アカウントを危険にさらした場合、データベース サーバからテーブルを落とすことができます。</p>
  <h1>ソリューションの例</h1>
  <p>以下のスニペットに、データベース アカウントとそのアクセス許可の一部のリストを示します。 アプリケーションのアカウントには適切な権限が与えられるため、攻撃者はアプリケーションのデータベース アカウントを侵害することによってテーブルを削除することはできません。</p>
  <h1>その他のリソース</h1>
  <ul>
    <li>Microsoft SQL Server でアカウントを保護する詳細については、以下を参照してください:<a href="http://msdn2.microsoft.com/en-us/library/aa302434.aspx#c18618429_012">データベース サーバをセキュリティ保護する: 手順 4. アカウント</a>。</li>
  </ul>
  <h1>関連する項目</h1>
  <ul>
    <li>
      <a href="/article/63e628e0-c4bb-42c5-a549-7cd112cad81e">ガイドライン: 強力な SQL パスワードを強制する </a>
      <li>
        <a href="/article/e1992e93-39c6-4508-9b16-0e07b0939c37">ガイドライン: 接続文字列をセキュアにする</a>
      </li>
    </li>
  </ul>
  <hr />
  <p>出典: Microsoft Patterns &amp; Practices ガイダンス</p>]]></Data>
  </Content>
</TeamMentor_Article>