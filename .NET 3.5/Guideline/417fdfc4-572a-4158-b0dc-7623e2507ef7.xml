<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="1824202966" Content_Hash="-2045167987">
  <Metadata>
    <Id>417fdfc4-572a-4158-b0dc-7623e2507ef7</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>復元不能な例外が発生した後にシステムを脆弱な状態にしない</Title>
    <Category>例外管理</Category>
    <Phase>設計</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>ガイドライン</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>行うべき事柄</h1>
  <p>回復できない例外がアプリケーションを脆弱な状態にしないようにします（例えば例外安全性の保証が不充分になってしまう）。</p>
  <h1>理由</h1>
  <p>デフォルト動作はエラーが発生した場合に単に特定のコードの実行を停止するというものなので、システムによっては例外が発生すると脆弱になってしまうものもあります。 私たちは様々な API 文書やリファレンス実装で次のようなコードの事例コードを見たことがあります：</p>
 <pre>$result = perform_some_operation(test string, 45, $class_type); </pre>
 <pre>If (!$result) die(an error occurred); </pre>
  <p>これらの事例はインターネット上をまるでタンポポのように飛び交ってしまいます。 特定 API の簡単なデモ、そうでしょうか？ 勿論、でもエラー処理も無視してしまっています！ もし、機微データがどこかの一時ファイルにあったとしたらどうでしょうか？ 上記の例は現在のコンテキストの実行を止めるだけでクリーンアップは実施しません。 しかもなお悪いことにこのような処理エラーの場合ほぼ全ての関数呼び出しが様々な種類のエラーを発生さ、しかもそれら全てをトラップする必要があるので問題になります。 全てのエラーを処理して、無様で危険なシステム状態を防ぐためにはより良い方策が必要です。 </p>
  <h1>状況</h1>
  <p>このルールは回復不能な例外を発行または伝播することができるコードを含む全てのコード部分に適用する必要があります。 この制約が満たされない場所がコード内に 1 つでもあると、システムは最終的に、回復や処理が不可能な例外を生じさせる状態に陥ります。 </p>
  <h1>対策</h1>
  <p>回復不能な例外を適切に処理するためにはいくつかのステップを伴います：グローバル エラー ハンドラーに全てのエラーをトラップするように宣言します。これにより、少なくとも全ての例外を捕らえることができます。 try/catch/finally ブロックを使用して構造化された例外管理を使用します。エラーからのクリーンアップを実行し、例外によって矛盾した状態や安全でない状態が生じないようする一貫した方法があります。 セキュリティがかかった制作システムのエラー レポートは実態を示すようなエラー メッセージをクライアントに送付して情報漏えいを起こすようなことはありません。 </p>
  <h1>関連する項目</h1>
  <ul>
    <li>
      <a href="/article/33a894ce-2061-4741-be92-1d063c9cf057">処理されていない例外にはグローバル例外ハンドラーを使用します</a>
      <li>
        <a href="/article/209b61a1-022d-4574-ad70-293b9a1a5a86">無害なメッセージを含む一般的エラー ページはクライアントに返されます</a>
      </li>
    </li>
  </ul>
  <hr />
  <p>出典: Microsoft patterns & practices guidance </p>]]></Data>
  </Content>
</TeamMentor_Article>