<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="1063605594" Content_Hash="1832299997">
  <Metadata>
    <Id>8e395ac1-713a-4d4a-8632-6f7dc5c87669</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>アプリケーション層にわたる監査とログへのアクセス</Title>
    <Category>監査とログ記録</Category>
    <Phase>設計</Phase>
    <Technology>Web アプリケーション</Technology>
    <Type>ガイドライン</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Alex Mackman, Michael Dunner, Srinath Vasireddy, Ray Escamilla and Anandha Murukan</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>適用対象</h1>
  <ul>
    <li>Web アプリケーション</li>
  </ul>
  <h1>行うべき事柄</h1>
  <p>追跡、確認、および否認不可のためにアプリケーションのすべての階層にわたってアクセスを監査およびログ記録します。&nbsp; アプリケーションレベルのログ記録とプラットフォーム監査の機能を組み合わせて使用します。</p>
  <h1>理由</h1>
  <p>単一レベルのみの監査では、ログ記録システムを完全に回避する、その他のレイヤーへの攻撃に対してシステムが無防備になります。&nbsp; また、ログ ファイルの相互関係が考慮されていないシステムは、各レイヤーでは害がないように見えても、より大きなレベルで見ると実際には危険な攻撃に対して無防備になります。</p>
  <span>
  </span>
  <h1>状況</h1>
  <p>複数の階層を持つすべてのシステムでは (たとえ、Web とデータベースだけであっても)、各レベルでログを記録する必要があります。&nbsp; システムが非常に複雑であるため、またはシステムで非常に多くのトラフィックを受信するため、階層間の追跡を簡単に手動で実行できない場合は、ログ ファイルを業務アクティビティのビューに結合する手段を提供する必要があります。</p>
  <span>
  </span>
  <h1>対策</h1>
  <p>統合されたログ記録の目的は、基本的なシステム機能を監視するだけでなく、システム内のアクティビティに一定の保証を提供することです。&nbsp; 各階層のログによって、システムのアクティビティについての十分な情報が得られますが、複数の階層をまたいで発生する業務レベルのイベントについての有効な視点は十分には得られません。&nbsp; 以下のステップは、統合されたログ記録を使用して業務アクティビティを監視するための指針です:</p>
  <h2>1. アプリケーションの重要な業務アクティビティを特定します</h2>
  <p>&nbsp;業務アクティビティを正しくログ記録するには、まず、アプリケーションで実行されるどのアクティビティが重要であるかと、それぞれ何をログ記録する必要があるかを理解する必要があります。&nbsp; この情報は、アプリケーションの業務要件から直接得られます (その情報が存在しない場合は、アプリケーションの要件資料に追加する必要があります)。&nbsp; アプリケーションの業務アクティビティに関する適切な分析がない場合、脅威モデルの要件モデリング フェーズで分析するのが良い方法です。&nbsp; 重要な業務ロジックの例を以下に示します:</p>
  <ul>
    <li>
      <p>{{ ここに例をいくつか挿入する }}</p>
    </li>
  </ul>
  <h2>2. それぞれのアクティビティでどのレベルのログ記録が必要かを決定します</h2>
  <p>各アクティビティについてどの程度の情報が必要になるかは、そのアクティビティの発生後、そのアクティビティの発生について説明する必要がある内容によります。&nbsp; ログ記録には大まかに、追跡、確認、否認不可の 3 レベルがあり、そのレベルの順に、ログ記録する必要がある内容の要件が増えます。</p>
  <h3>追跡用のログ記録</h3>
  <p>追跡用のログ記録が適しているのは、処理についての統計データ (頻度、タイミングなど) を提供することだけが必要な場合です。 統計情報は正確である必要があるため、特に収集される実際の統計情報に柔軟性が必要な場合は、イベントごとにログを記録することもやはり適切です。</p>
  <h3>確認用のログ記録</h3>
  <p>確認用の場合はもう少し詳細になります。 処理についての該当する基本的な情報をすべて記録する必要があります。&nbsp; このレベルでのログ記録の目的は、処理を手動で再作成するために十分な、処理の完全な記録を提供することです。&nbsp;&nbsp;ほとんどの業務ロジックの場合に、これがログ記録のデフォルト レベルです。</p>
  <h3>否認不可用のログ記録</h3>
  <p>否認不可では基準が非常に高くなります。&nbsp; この場合の目的は、ある処理の当事者の 1 人がその処理に対して異議を唱えた場合に、処理の妥当性の証拠を提供できることを保証することです。&nbsp; この証拠を提供できるかどうかは、アーキテクチャレベルの課題です。それができることは、多くのセキュリティ関連の設計課題、特に認証において意味がありますが、その課題は根本的にログ記録に関するものです。&nbsp; 否認不可の難しい点は、十分なデータがシステムに存在することを保証することです。&nbsp; 否認不可をサポートするように設計されているログ ファイルには、処理に関連するすべてのデータが含まれている必要があります。&nbsp; 理想的には、このデータには暗号化署名が含まれている必要があり、タンパリングを防止するためにそのデータ自体が署名されていて、セキュアに格納されている必要があります。</p>
  <h2>3. それらのアクティビティを実行するすべての方法が十分なデータと共にログ記録されることを保証します</h2>
  <p>&nbsp;ログ記録する必要があるすべての業務アクティビティと、それらをログ記録に必要なレベルが分かったら、それらのアクティビティを実行するすべての方法を列挙する必要があります。&nbsp; 多くのアプリケーションの場合、指定されたアクティビティに対してエントリ ポイントが 1 つありますが、より複雑なアプリケーションにはエントリ ポイントが複数存在する場合があります。&nbsp; また、複数レベルでのログ記録は、高いレベルの機能が迂回された場合に備えた、ある種の多層防御になります。&nbsp; N 層システムはこの良い例です。その場合、通常のエントリ ポイントは Web フロントエンドを介しますが、ミドルウェア レイヤーおよびデータベース レイヤーでのログ記録は、通常のエントリ ポイントの迂回を検出する上で非常に重要です。&nbsp; 複数レベルでログ記録するとき、または、階層的でない複数のシステムを連携させるときは、業務レベルのログ記録により、それらの異種データを単一のビューに統一する方法を提供することが不可欠です。</p>
  <h2>4. ログが監視されていることを保証します。</h2>
  <p>&nbsp;次のステップは、ログが監視されていて、その中の情報に対して対応が取られることを保証することです。&nbsp; ログ記録は、その結果が日の目を見なければ、何の役にも立ちません。&nbsp; アプリケーションを管理する操作チームと共に、ログ イベントを監視し対応する計画を立てます。&nbsp; 状況に応じて、計画をゼロから立てる必要がある場合もあれば、既存のフレームワークに組み込める場合もあります。 </p>
  <p>監視フレームワークをゼロから定義する場合に、検討する必要がある事柄を以下に示します: </p>
  <ul>
    <li>
      <p>ログをいつ監視する必要があるか。アプリケーションによっては、常時監視する必要がありますが、多くは 1 日 8 時間、週 5 日間で十分です。 </p>
      <li>
        <p>どの程度の頻度でログを監視するか。アプリケーションが大きな電子商取引サイトの場合、ログを監視する専門チームが必要かもしれませんが、小規模な Web アプリケーションでは、シスアドが 1 日に 2、3 回確認すれば十分安全です。 </p>
        <li>
          <p>どのくらいの応答時間が必要ですか。サイトに深刻な問題がある場合、最初にログにそれが現れます。 問題に対する許容値は、数分ですか、数時間ですか、数日ですか。 </p>
          <li>
            <p>潜在的な課題に対して、どのような手順で対処しますか。 </p>
            <li>
              <p>ログやログから導かれる情報に対するアクセスをどのように制御しますか。 それは、どの程度機微な情報と考えられますか。 </p>
              <li>
                <p>ログ監視チームにはどのような応答機能がありますか。&nbsp; ログの情報に対処できなければ、ログ監視はそれ自体意味がありません。疑わしいイベントを調査して、アカウントを凍結する必要があります。</p>
              </li>
            </li>
          </li>
        </li>
      </li>
    </li>
  </ul>
  <h2>ログ記録の落とし穴</h2>
  <p>業務レベルで情報をログ記録することは、特定の関数呼び出しのログ、Web サーバー トラフィックのログ、またはデータベース クエリのログなど実装レベルのログを提供するよりも困難です。&nbsp; これらの全く異なる情報源をすべて組み合わせて、業務レベル イベントの一貫性のあるビューを提供することを保証すると同時に、それらのイベントを構成する要素となる実装レベルのログ エントリを簡単に見つけられるようにすることは、簡単なことではありません。&nbsp; アプリケーションの複雑さによっては、このようなレベルでログ記録を統合する必要がない場合があります。たとえば、指定されたデータベース クエリがどの業務イベントの一部であるかを簡単に判断できる場合は、おそらく、こういったことを自動化する必要ありません。&nbsp; ただし、もっと大規模で複雑なアプリケーションでは、このようなログ記録の連係が必要です。</p>
  <p>あまりにも多くの情報をログ記録すると、それ自体が問題になる可能性があります。&nbsp; アプリケーションから確認しているログ イベントのボリュームの見当が付いたら、何らかのログ調整を実施して、対処できる割合まで情報の流れを減らすことは試みる価値があります。&nbsp; 適切なログ調整は、冗長な情報のみを排除し、最も重要な情報を最初に表面化させる方法になります。 </p>
  <p>異常な状況の検出に基づいて自動的に対処することは、非常に危険であり、避けるべきです。&nbsp; イベント (たとえば、ログイン試行) が発生する速度を調整することは理にかなっていますが、そのアクションを防止すると、実施が容易な DoS 攻撃をアプリケーションが受ける可能性があります。 </p>
  <h1>その他のリソース</h1>
  <ul>
    <li>詳細については、「Chapter 4 - Design Guidelines for Secure Web Applications (第 4 章 - セキュリティ保護された Web アプリケーションの設計ガイドライン)」を参照してください。<a href="http://msdn2.microsoft.com/en-us/library/aa302420.aspx">http://msdn2.microsoft.com/en-us/library/aa302420.aspx</a></li>
  </ul>
  <hr />
  <p>出典: Microsoft patterns & practices guidance</p>]]></Data>
  </Content>
</TeamMentor_Article>