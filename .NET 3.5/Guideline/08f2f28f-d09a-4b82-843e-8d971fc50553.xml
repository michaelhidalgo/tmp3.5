<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="904255961" Content_Hash="-1196899942">
  <Metadata>
    <Id>08f2f28f-d09a-4b82-843e-8d971fc50553</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>エラーメッセージで重要な情報を開示しない</Title>
    <Category>エラー ハンドリング</Category>
    <Phase>実装</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>ガイドライン</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>1</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>行うべき事柄</h1>
  <p>すべてのエラーメッセージが一般的な内容で、重要なまたは機微な情報を開示しないことを確実にします。 すべてのエラーメッセージが攻撃者にとって都合の良い情報を開示していないことに注意します。 </p>
  <h1>理由</h1>
  <p>しばしば攻撃者は、根底にあるテクノロジを理解するための第一歩としてウェブアプリケーションのエラーメッセージを探ります。 攻撃者はエラーメッセージ同士の矛盾点を探し、異なるコードパスが取られるのはいつか、あるいは入力した内容の質についての情報を探ります。 SQLやOSエラーメッセージなど、バックエンドシステムから直接返されるエラーメッセージは、悪意のあるユーザーが次の攻撃を選択する助けとなります。 </p>
  <h1>状況</h1>
  <p>エラーメッセージがユーザーに伝えられる必要がある場合。 </p>
  <h1>対策</h1>
  <ol>
    <li>
      <p>
        <strong>すべてのエラー メッセージが一般的なものであることを確認してください</strong>：エラー メッセージ内に、処理されるデータの質やデータの処理に使用されるメカニズムに関する情報を表示しすぎないようにしてください。 たとえば、&amp;#8220;入力に不正な文字が含まれています&amp;#8221;  というエラー メッセージは、"入力に '&lt;' または '&gt;' の文字を含めることはできません" というメッセージよりもはかるに安全です。</p>
      <li>
        <p>
          <strong>動的に生成されたエラー メッセージに注意してください</strong>：動的なエラー メッセージは適切に処理するのが難しく、絶対に必要な場合を除いて使用すべきでありません。 動的なエラーメッセージを使用しなければならない場合は、エラーメッセージがいかなる方法でも攻撃者を助けないことを確認してください。 動的に生成されたエラーメッセージは、SQLインジェクション、バッファ オーバーフローやクロスサイトスクリプティングなどの他の脆弱性により、アプリケーションを開くことがあります。</p>
        <li>
          <p>
            <strong>デバッグ情報がユーザーにエコーされないようにしてください</strong>：デバッグ情報は生成してもよいですが、管理者だけがアクセス可能な書き込み専用の権限を用いてデータベースのログ記録されるべきです。</p>
          <li>
            <p>
              <strong>ベーシックな認証失敗メッセージのみを表示してください</strong>：認証エラー メッセージの場合、すべての認証失敗時に必ず表示する単一のエラー メッセージを選択してください。 ユーザーが次のどの理由で認証に失敗して、いつでも同じ一般的なエラーメッセージが表示されることを確認してください。</p>
            <ol>
              <li>無効なユーザー名<li>有効なユーザー名、無効なパスワード<li>アカウントがロックされている</li></li></li>
            </ol>
            <p>この点の詳細については、「<a href="/article/e0ebf8be-838c-4762-8c44-0d90adf63aef">アカウント ロックアウト攻撃</a>」を参照してください。</p>
            <li>
              <p>
                <strong>web.config ファイルで、customErrors を「RemoteOnly」または「On」に設定してください</strong>：ASP.NET では、エラーを詳細に記述したエラー メッセージではなく、カスタムのエラー メッセージを指定することができます。  customErrors="Off"  にすることは、攻撃者には完全なスタックトレースのほか、NETランタイムまたは他のバックエンドシステムによって生成された非常に詳細なエラーメッセージが表示されることを意味します。</p>
              <li>
                <p>
                  <strong>同一のメッセージを報告するエラー メッセージは全く同一になるようにしてください</strong>：複数のエラー メッセージは、システムに関してより詳しい情報を発見するために比較される可能性があります。 エラーメッセージは個別には機微な情報を表示しないかもしれませんが、横並びに比較した場合は攻撃者を助けることができます。 エラーメッセージは、文言や句読点が異なる場合がありますが、これらの違いは、異なるコードパスがとられていることを攻撃者に教えることになります。 共通エラーリソースファイルを使用すると、複数の場所から同じエラーメッセージを報告することをはるかに容易に行えます。 エラーテキストをエラー番号にリンクする共通エラーリソースファイルを作成します。この方法では、特定のエラーが発生した時に、エラーメッセージリソースファイルのエラーテキストをただ検索するだけでよく、それによってすべての場所で同一メッセージが使用されることを確保できます。</p>
              </li>
            </li>
          </li>
        </li>
      </li>
    </li>
  </ol>
  <h1>問題の例</h1>
  <p>以下のコードでは、ユーザーの認証が行われます。 ただし、このコードではエラー メッセージを通じて、送信された資格情報が有効なユーザーまたは無効なユーザーのどちらを表すかを公開してしまっています。</p>
 <pre>public void login()<br />&amp;#123;<br />      if (&amp;#33;validUser())<br />      &amp;#123;<br />            throw new Exception("User not found.");<br />      &amp;#125;<br />       if (&amp;#33;validPass())<br />      &amp;#123;<br />            throw new Exception("Wrong password.");<br />      &amp;#125;<br />      commit();<br />&amp;#125;</pre>
  <h1>ソリューションの例</h1>
  <p>以下のコードでは、ユーザーの認証が行われます。 認証が失敗した理由に関係なく同じエラー メッセージが表示されるため、攻撃者は入力を試みた資格情報が有効なユーザーを表しているかどうかを判断できません。</p>
 <pre>public void login()<br />&amp;#123;<br />         if (&amp;#33;validUser() &amp;#124;&amp;#124;&amp;#33;validPass())<br />      &amp;#123;<br />            throw new Exception("Authentication failed.");<br />      &amp;#125;<br />      commit();<br />&amp;#125;</pre>
  <h1>その他のリソース</h1>
  <ul>
    <li>.NET 内でのカスタム エラー メッセージの詳細については、「<a href="http://www.devx.com/dotnet/Article/32493/1763">.NET 構成ファイルにおける上位 10 個のセキュリティ上の脆弱性</a>」を参照してください。<li>適切なエラー処理手法の詳細については、「<a href="http://www.owasp.org/index.php/Error_Handling,_Auditing_and_Logging">エラーの処理、ログ記録と監査</a>」を参照してください。</li></li>
  </ul>
  <h1>関連する項目</h1>
  <ul>
    <li>
      <a href="/article/98fb697a-6278-4f73-8937-291b2b83cdb4">チェックリスト項目：エラー メッセージ内で有益情報が開示されない</a>
    </li>
  </ul>
  <hr />
  <p>出典: Microsoft Patterns &amp; Practices ガイダンス </p>]]></Data>
  </Content>
</TeamMentor_Article>