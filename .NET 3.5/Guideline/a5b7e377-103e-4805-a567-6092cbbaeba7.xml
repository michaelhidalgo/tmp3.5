<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="2062504706" Content_Hash="881543443">
  <Metadata>
    <Id>a5b7e377-103e-4805-a567-6092cbbaeba7</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>アプリケーションをパブリック ドメインとプライベート ドメイン間に区分する</Title>
    <Category>認証</Category>
    <Phase>展開</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>ガイドライン</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>行うべき事柄</h1>
  <p>URL 名前空間とファイルシステム名前空間の両方において、パブリック コンテンツと制限コンテンツの境界を定義してください。</p>
  <h1>理由</h1>
  <p>パブリックと制限付きコンテンツ間の境界を定義することで、ユーザー認可のタスクが簡略化され、一般にエラーを起こしにくくなります。 コンテンツが分離される場合､サーバの構成を使用して、コードに明示的にチェックを追加する開発者に頼ることなく自動的に認可ルールを適用できます。</p>
  <h1>状況</h1>
  <p>アプリケーションが特定のリソースへのアクセスを制限する場合、本ガイドラインの使用を検討してください。 例えば、匿名のユーザーはアプリケーション全体ではなくその一部へのアクセスを許可されますが、認証ユーザーはそのロールに基づいてアクセスを許可されます。</p>
  <h1>対策</h1>
  <p>境界の定義には、以下が必要となります:</p>
  <ol>
    <li>
      <p>
        <strong>ロールを決定します</strong>：さまざまな種類のユーザーとその権限を定義してください。 アプリケーションの各ページにアクセスするために必要な権利を文書化する、セキュリティポリシーを構築してください。</p>
      <li>
        <p>
          <strong>SSL を必要とすべきページを決定します</strong>：Credential 情報、保護されていない認証 Cookie 、またはクレジット カードや社会保障番号等の機微なユーザー情報を送信するページが含まれます。 そのようなページはSSLを使用してのみ送信しなければなりません。</p>
        <p>HTTP反復攻撃に弱いという意味で、Forms Authentication Cookieは保護されていないことに留意しなければなりません。 そのため、認証済みユーザーを必要とするForms Auth ASP.Netアプリケーションのページは、どれもSSL経由でのみアクセスしなければなりません。</p>
        <li>
          <p>
            <strong>URL の名前空間を構造化します</strong>：アプリケーションの URL の名前空間を構造化して、SSL を必要とするページと必要としないページを最初に分離してください。 次にアプリケーション用に定義された各種のロールに従って別個のディレクトリを定義してください｡ 例えば､アプリケーションのroot下に次のようなディレクトリを作成することがあります。</p>
 <pre>//secure/usr/secure/admin</pre>
          <li>
            <p>
              <strong>IIS で、お使いのアプリケーションの適切な部分に SSL が必要になるように構成を行います</strong>。</p>
            <ol>
              <li>[マイ コンピュータ] を右クリックして [管理] を選択します。<li>[サービスとアプリケーション] ノードの下の [インターネット情報サービス] を展開して、お使いのウェブサイトの場所を確認します。<li>制限付きフォルダーを右クリックして [プロパティ] を選択します。<li>[安全な通信] セクションの下の [編集] をクリックして SSL 接続を必須にします。 (注記:このサーバに証明書をインストールして構成を行っていない場合は、お使いの IIS ウェブサイト上で SSL を設定する手順の関連セクション を参照してください)</li></li></li></li>
            </ol>
            <li>
              <p>
                <strong>名前空間の機微な部分への、もしくはそこからの移動には絶対URLを使用してください</strong>:相対リンクは現在のページと同一のプロトコル(HTTPまたはHTTPS)を使用します。 これにより、アプリケーション内でのSSLを必要とするページへのリンクが破損する可能性があります。 不必要にSSLを使用することにもつながる可能性があり、すなわちパフォーマンスの低下をもたらします。</p>
              <p>これら問題の両方を修復するには、相対URLではなくプロトコルを明示的に特定する絶対URLを使用することです。 絶対URLを使用した転送の例が下記に表示されています。</p>
 <pre>private void btnLogon_Click( object sender, System.EventArgs e )&amp;#123;// Form an absolute path using the server name and v-dir namestring serverName = HttpUtility.UrlEncode(Request.ServerVariables&amp;#91;"SERVER_NAME"&amp;#93;);string vdirName = Request.ApplicationPath;Response.Redirect("https://" &amp;#43; serverName &amp;#43; vdirName &amp;#43; "/Restricted/Login.aspx");&amp;#125;</pre>
              <li>
                <p>
                  <strong>URL 認可制限アクセスを使用します</strong>：<strong>&lt;authorization&gt;</strong> エレメントを使用して、認証されたユーザーだけが安全なページにアクセスできるようにしてください。 このエレメントを以下のように <strong>&lt;/system.web&gt;</strong> の終了タグの下に配置してください。</p>
 <pre>&lt;&amp;#33;-- The secure folder is for authenticated and SSL access only. --&gt;&lt;location path="Secure" &gt;  &lt;system.web&gt;    &lt;authorization&gt;      &lt;deny users="?" /&gt;    &lt;/authorization&gt;  &lt;/system.web&gt;&lt;/location&gt;</pre>
                <p>さらに、下記の構成では、未認証のユーザーにアプリケーションのroot ディレクトリ内のページへのアクセスが許可されます。 この構成をメインの <strong>&lt;system.web&gt;</strong> エレメント内に配置してください。</p>
 <pre>&lt;system.web&gt;  &lt;&amp;#33;-- The virtual directory root folder contains general pages.       Unauthenticated users can view them and they do not need        to be secured with SSL. --&gt;  &lt;authorization&gt;    &lt;allow users="&amp;#42;" /&gt;  &lt;/authorization&gt;&lt;/system.web&gt;</pre>
                <p>
                  <strong>注記:</strong>このタイプのサイトを使用する場合は､アプリケーションを非SSLページのユーザー識別子に依存させてはいけません。 前記の構成では、非 SSL ページへの要求にForms Authenticationチケットが送信されません。 その結果、ユーザーは匿名とみなされます。 これには、ユーザー名を必要とするパーソナライズのような、関連する機能に影響を与えます｡</p>
              </li>
            </li>
          </li>
        </li>
      </li>
    </li>
  </ol>
  <h1>問題の例</h1>
  <p>MyAppは、機微データに基づきレポートを作成する財務ツールです。 これによりユーザーは財務データをアップロートしレポートをダウンロードできます。 アプリケーションが小規模なので、コンテンツのすべてが同一のディレクトリ内にあります。 アクセス制御はウェブアプリケーションが強制しますが、与えられた呼び出しが実行される前に必要なアクセス許可をチェックします。</p>
  <p>データとコードの両方が同一ディレクトリ内にあるので、攻撃者は未加工の財務データにアクセスできるようになる可能性があります。</p>
  <h1>ソリューションの例</h1>
  <p>MyAppは、機微データに基づきレポートを作成する財務ツールです。 これによりユーザーは財務データをアップロートしレポートをダウンロードできます。 アプリケーションには財務データ用に専用の/data/  ディレクトリがあります。 /data/ディレクトリ内のコンテンツへのアクセスはMyAppをホスティングするサーバによって処理されるので、認可されていないユーザーがアクセスすることがはるかに難しくなります。</p>
  <h1>その他のリソース</h1>
  <ul>
    <li>SSL をお使いのアプリケーションのウェブ サーバ上で設定する方法の詳細については、「<a href="http://msdn2.microsoft.com/en-us/library/aa302411.aspx">ハウツー: Web サーバ上で SSL を設定する方法</a>」を参照してください。</li>
  </ul>
  <h1>関連する項目</h1>
  <ul>
    <li>
      <a href="/article/fc7f567f-bbfc-434c-aaa5-23d79b458605">ガイドライン：アカウント管理をメインのアプリケーション インターフェイスから分離する&nbsp;</a>
      <li>
        <a href="/article/17034ef0-8935-4fb2-bbae-d79982e710c7">ガイドライン：ロールベース セキュリティ チェックを実行する</a>
        <li>
          <a href="/article/0c6693ed-e3c2-4640-a795-c7c9c2a63cbc">ガイドライン:セキュリティ ポリシーを定義する</a>
          <li>
            <a href="/article/eb5dbadd-49ab-46e1-bc0d-d299eeb465f6">ガイドライン：コードを別々のアセンブリに区分する</a>
              <li>
                <a href="/article/b541ba53-6354-47be-9d89-8209b9807d93">攻撃：強制的ブラウズ攻撃</a>
                <li>
                  <a href="/article/ddcc12c3-77b5-4819-b07e-99ac5e2317c3">チェックリスト項目：アプリケーションがパブリック ドメインとプライベート ドメインに区分されている</a>
                  <hr />
                </li>
              </li>
            </li>
          </li>
      </li>
    </li>
  </ul>
  <p>出典: Microsoft Patterns & Practices ガイダンス </p>]]></Data>
  </Content>
</TeamMentor_Article>