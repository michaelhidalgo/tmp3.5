<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="30301063" Content_Hash="982559145">
  <Metadata>
    <Id>fc7f567f-bbfc-434c-aaa5-23d79b458605</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>アカウント管理を主要アプリケーション インターフェイスから分離する</Title>
    <Category>認可</Category>
    <Phase>設計</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>ガイドライン</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>行うべき事柄</h1>
  <p>メイン アプリケーション インターフェイスからアカウント管理を分離してください。</p>
  <h1>理由</h1>
  <p>アカウント管理には、メイン アプリケーション インターフェースより高い権限が要求されます。 2 つのインターフェースを別々にすることは、普通のユーザーが権限を管理者の持つ権限に昇格できる危険性を低減させます。</p>
  <h1>状況</h1>
  <p>アプリケーションに管理インターフェイスがある場合は、このガイドラインを使用して、メイン アプリケーション インターフェイスから管理インターフェイスを分離してください。</p>
  <h1>対策</h1>
  <p>管理インターフェースを設計する際は、以下の手順を使用します。</p>
  <ol>
    <li>
      <p>
        <strong>特権のあるユーザーだけがすべてのアカウントを管理できます</strong>: アプリケーションの管理モジュールがメイン アプリケーション インターフェイスとは別個のものになるように設計します。 アプリケーションおよび管理インターフェイスに別々の認証メカニズムを使用すると、特権の昇格攻撃のリスクを軽減します。 特権ユーザーのアカウントがメインアプリケーションインターフェイスでセッション ハイジャックを介して被害にあっても、攻撃者は管理インターフェイスにアクセスして他のユーザーアカウントを侵害することはできません。</p>
      <p>メインインターフェイスのためのセッションIDとは異なる管理モジュール用セッションIDを使用してください。 それぞれの<strong>web.config</strong> の<strong>sessionState</strong> エレメント内の<strong>cookieName</strong> 属性を変更して、各インターフェイスのセッション名を変えます。 例: </p>
 <pre>&lt;system.web&gt;<br />    ...<br />    &lt;sessionState cookieName="MyAppAdminSess" /&gt;<br />    ...<br />&lt;/system.web&gt;</pre>
      <li>
        <p>
          <strong>ユーザーは、自分のアカウントを管理することを許可される場合があります。 </strong>ユーザーに自分のアカウントの管理を許可する必要がある場合があります。 これは、パスワードやアカウント詳細などを変更する能力に関係します。そのような管理は、メイン アプリケーション インターフェースを通して実行できます。 ユーザーは機微データを変更しているため、追加のセキュリティ対策を適用する必要があります。</p>
        <ul>
          <li>
            <strong>サーバ側でのユーザーIDの追跡</strong>: ユーザーは常にサーバ側で追跡する必要があります。 セッション内にユーザーIDを格納します。 セッション識別子がクライアントで必要な唯一のデータとなります。 これにより、攻撃者が他のユーザーのアカウント情報を変更する危険性を低減できます。&gt; <li><strong>再認証を強制します</strong>。ユーザーのパスワードを変更する際に、再認証を強制します。 これは、ユーザーがパスワード変更について認識していて、セッション ハイジャックの被害者でないことを確認するのに役立ちます。 詳細については、「<a href="/article/740a1606-d091-4a93-bfd8-f0d4226adbf1">重要な機能の実行時に再認証を強制する</a>」ガイドラインを参照してください。 <li><strong>セクションのアカウントの変更</strong>: 一度にすべてのアカウント情報を変更しないでください。 アカウント変更手順をセクションに分けます。 たとえば、アカウント情報を、Credential 情報、個人データ、連絡先情報、および追加情報にグループ化します。 グループ内のアカウント情報を変更することは、ユーザーが自分のアカウントを更新しているときの情報漏洩のリスクを低減します。 <li><strong>アカウント変更時のSSL使用</strong>:  SSLの使用は、ネットワーク上で機微データを送信する際に暗号化を提供し、ユーザーに対してアプリケーションの信頼性を検証します。 詳細については、「<a href="/article/bd63d4b0-205d-4d95-9022-86a3f0af5232">資格情報の送信時に SSL を使用する</a>」ガイドラインを参照してください。</li></li></li></li>
        </ul>
      </li>
    </li>
  </ol>
  <h1>問題の例</h1>
  <p>次のコード片は、アプリケーションのメインおよび管理インターフェイスにアクセスするときに、管理者が行うHTTP要求を示しています。 管理インターフェイスがアプリケーションから分離されていないため、管理者はアプリケーションの使用と管理を単一のセッションで行うことができます。 したがって、メインアプリケーション インターフェイスでのクロスサイト スクリプティングなどの脆弱性に、管理インターフェイスもさらされます。</p>
  <h1>ソリューションの例</h1>
  <p>次のコード片は、アプリケーションのメインおよび管理インターフェイスにアクセスするときに、管理者が行うHTTP要求を示しています。 管理インターフェイスはサーバディレクトリおよびサーバポートを介してアプリケーションから分離されているので、管理者はアプリケーションの使用と管理を行うために2つの異なるセッションを使用する必要があります。 したがって、メインアプリケーション インターフェイスのクロスサイト スクリプティングなどの脆弱性に、管理インターフェイスはさらされません。</p>
  <h1>その他のリソース</h1>
  <ul>
    <li>ASP.NET Session State に関する詳細については、次を参照してください:<a href="http://msdn2.microsoft.com/en-us/library/ms178581(vs.80).aspx">セッション状態の概要</a>。</li>
  </ul>
  <h1>関連する項目</h1>
  <ul>
    <li>
      <a href="/article/740a1606-d091-4a93-bfd8-f0d4226adbf1">ガイドライン: 重要な機能を実行するときには再認証を適用する </a>
      <li>
        <a href="/article/254ddab5-ecd2-4e05-a2b0-861e970bc0d9">ガイドライン: セッション Cookie を保護する </a>
        <li>
          <a href="/article/a5b7e377-103e-4805-a567-6092cbbaeba7">ガイドライン:パブリックとプライベート ドメインの間でアプリケーションを区分する</a>
          <li>
            <a href="/article/08d9e9ed-bb8a-496a-b564-72344812d445">チェックリスト項目: アカウント管理はメイン アプリケーション インターフェイスから切り離される</a>
          </li>
        </li>
      </li>
    </li>
  </ul>
  <hr />
  <p>出典: Microsoft Patterns &amp; Practices ガイダンス </p>]]></Data>
  </Content>
</TeamMentor_Article>