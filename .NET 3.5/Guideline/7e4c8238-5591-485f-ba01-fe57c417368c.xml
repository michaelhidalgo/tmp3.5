<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="1402572676" Content_Hash="-1469391674">
  <Metadata>
    <Id>7e4c8238-5591-485f-ba01-fe57c417368c</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>SuppressUnmanagedCode を注意して使用する</Title>
    <Category>アンマネージ コード</Category>
    <Phase>実装</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>ガイドライン</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>行うべき事柄</h1>
  <p>アセンブリがアンマネージ コードに対し多数の呼び出しを行う場合、複数のアンマネージ コード アクセス許可要求に関連したパフォーマンス オーバーヘッドが問題になることがあります。</p>
  <p>この場合、P/Invoke メソッド宣言で <b>SupressUnmanagedCodeSecurity</b> 属性を使用できます。 これにより、アンマネージ アクセス許可の完全な要求が、ジャストインタイム (JIT) コンパイル時にのみ 1 回発生するリンク要求に置き換えられます。</p>
  <h1>理由</h1>
  <p>リンク要求により、コードはおびき寄せによる攻撃 (Luring Attack) に脆弱になります。 このリスクを軽減するには、アセンブリが適切な予防策を講じ、悪意のあるコードにより不要な操作の実行が強要されないと確認できた場合に限り、アンマネージ コード アクセス許可要求を抑制することをお勧めします。</p>
  <h1>状況</h1>
  <p>アンマネージ コードを呼び出して、ソースにアクセスする場合｡ </p>
  <h1>対策</h1>
  <p>適切な対策の一例としては、アンマネージ コードにより実行されるオペレーションをより厳格に反映するカスタムのアクセス許可をアセンブリが要求する場合があります。</p>
  <h2>P/Invoke と共に SuppressUnmanagedCodeSecurity を使用する</h2>
  <p>次のコードは、P/Invoke メソッド宣言に <b>SuppressUnmanagedCodeSecurity</b> 属性を適用する方法を示しています。</p>
 <pre>public NativeMethods<br />{<br />&nbsp; // The use of SuppressUnmanagedCodeSecurity here applies only to FormatMessage<br />&nbsp; [DllImport("kernel32.dll"), SuppressUnmanagedCodeSecurity]<br />&nbsp; private unsafe static extern int FormatMessage(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int dwFlags, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ref IntPtr lpSource, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int dwMessageId,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int dwLanguageId, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ref String lpBuffer, int nSize, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IntPtr *Arguments);<br />}, <br />&nbsp; </pre>
  <h2>COM Interop と共に SuppressUnmanagedCodeSecurity を使用する</h2>
  <p>COM interop 呼び出しでは、次の例に示すように、属性をインターフェイス レベルで使用しなければなりません。</p>
 <pre> [SuppressUnmanagedCodeSecurity]<br />public interface IComInterface<br />{<br />}</pre>
  <h1>&nbsp;</h1>
  <hr />
  <p>出典: Microsoft patterns & practices guidance</p>]]></Data>
  </Content>
</TeamMentor_Article>