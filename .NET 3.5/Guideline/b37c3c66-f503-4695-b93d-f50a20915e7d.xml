<?xml version="1.0" encoding="utf-8"?>
<TeamMentor_Article Metadata_Hash="-1329311944" Content_Hash="-130198447">
  <Metadata>
    <Id>b37c3c66-f503-4695-b93d-f50a20915e7d</Id>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>2 要素認証を使用することを検討する</Title>
    <Category>認証</Category>
    <Phase>設計</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>ガイドライン</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>行うべき事柄</h1>
  <p>システムがビジネス機能性にとってクリティカルであるかまたは大量のクリティカルなアセットを操作する時は 二エレメント認証を使用してください。 </p>
  <h1>理由</h1>
  <p>2 エレメント認証は、ログインに単純なパスワードより多くが要求される、より強力な認証メカニズムです。 そのため、それを必要とするシステムではセキュリティが向上します。 </p>
  <h1>状況</h1>
  <p>アプリケーションがビジネスの機能にクリティカルであるか、もしくは財務データや個人を識別できる医療情報などのようなクリティカル アセットを大量に扱う場合は､2 エレメント認証を使用してください。一部のケースでは､特に財務または医療系を扱うときは、法的に 2 エレメント認証の実装が義務付けられている場合があります。 しかしながら、2 エレメント認証は、システムに費用と複雑性を追加することになり､適切なレベルのセキュリティを提供する場面でのみ使用することをお勧めします。</p>
  <h1>対策</h1>
  <p>2 要素認証は、ユーザー本人が知っているものまたはユーザー本人が持っているものを利用するという考え方に基づいています。 複雑さを伴うため、2 要素認証を専門とする技術ベンダーに相談することが必要になる場合があります。</p>
  <p>2 要素認証は、RSA などのいくつかのベンダーによって実装されています。 しかしながら、今はまだ広く実装されていないのでいくつかの問題があります。 クライアント PC 上で配置および保守する必要のある専用ソフトウェア パッケージを伴うため、実装はコストがかかり面倒です。 この技術は､中間者攻撃やトロイの木馬攻撃のような一部の攻撃を阻止することができません。その詳細は以下のBruce Schneier の記事へのリンクを参照してください｡ パスワードをプレーンテキストで保存することが知られているので、この技術を実装するツールについてはセキュリティ上の懸念もありました。</p>
  <p>これらの問題はありますが、2 エレメント認証は認証プロセスにセキュリティ レイヤーを実際に追加するので、オンラインの ID の盗難のような一部の攻撃を阻止するには有効です。 したがって、実装前には、保護されるアセットの価値および二エレメント認証に関連するトレードオフを慎重に検討する時間を取ってください。</p>
  <p>2 エレメント認証を活用するには:</p>
  <ol>
    <li>
      <p>
        <strong>2 エレメント認証の必要性を確認してください。</strong> アプリケーションを調査し､2 エレメント認証の必要性を決定してください。 アプリケーションが大量のアセットを扱うかまたはクリティカルなビジネス機能性を有する時､2 エレメント認証を使用したい場合があります。</p>
      <li>
        <p>
          <strong>認証ソリューションを選択します。</strong> 2 要素認証は、強力な認証用の一般的ソリューションです。 ユーザー本人が知っているものまたはユーザー本人が持っているものを利用するという考え方に基づいています。 たとえば、デビット カードの場合、関連する銀行口座のトランザクションを実行する前に、ユーザーは物理的なカードを持ち、PIN を知っている必要があります。 ソフトウェアの業界では､2 エレメント認証は、ユーザーの Credential 情報およびアプリケーションに認識されるデバイスの使用、または時間の経過とともに進化する暗号的に開発されたコードなどを必要とします｡ 使用可能なソリューションには以下のものがあります:</p>
        <ul>
          <li>RSA の SecurID 製品。ユーザーに割り当てられたハードウェアまたはソフトウェア トークンで構成されており、60 秒ごとに認証コードを生成します。 <li>VeriSign の Unified Authentication による管理サービス。この場合、企業ではすべてのユーザーに USB トークンを配置します。 <li>ActivIdentity の強力な認証ソリューション。スマート カード、ワンタイム パスワード、および USB トークンを使用します。</li></li></li>
        </ul>
        <p>多くのベンダーが｢第 2 のエレメント｣としてクライアントのマシン上に Cookie を使用しますが、これは 2 エレメント認証メカニズムを正しく実装したものではありません。 クッキーは、せいぜいマシンの認証を保証するだけで、ユーザー認証は保証しません。さらに、物理的に独立したトークンとは異なり、基本プラットフォームのセキュリティからの独立性を十分には保証できません。</p>
        <li>
          <strong>認証ソリューションを適用します。</strong> アプリケーションのニーズに最も良く適合する2 エレメント認証ソリューションを選択後、ソリューションをアプリケーションに統合する技術的な局面については適切なベンダーに相談してください。</li>
      </li>
    </li>
  </ol>
  <h1>問題の例</h1>
  <p>MyApp はオンライン バンキング製品です。 ユーザーを検証する時､単一エレメント認証を使用します、 したがって、ユーザーは認証するためにユーザー名とパスワード(単一エレメント)のみを提供する必要があります。 ユーザーの資格情報が、十分強くなく簡単に推測できる場合、またはフィッシング攻撃により漏えいした場合、攻撃者はユーザーのアカウントにアクセスできることになります。 </p>
  <h1>ソリューションの例</h1>
  <p>MyApp はオンライン バンキング製品です。 ユーザーを検証する時､2 エレメント認証を使用します。 2 エレメント認証を実装しますので、ユーザーは認証するためには、ユーザー名とパスワード(最初のエレメント)およびセキュリティ トークン(第 2 のエレメントで、これは物理的に｢何か所有するもの｣です)に保存された情報を提供する必要があります。 ユーザーの資格情報が漏えいしても、攻撃者は 2 番目の必要な認証トークンを持っていないので、そのアカウントは依然として保護されています。</p>
  <h1>その他のリソース</h1>
  <ul>
    <li>強力な認証の詳細は､次を参照してください:<a href="http://en.wikipedia.org/wiki/Strong_authentication">Wikipedia の 強力な認証</a>を参照してください。 <li>2 エレメント認証に関連づけられた不安全性については、<a href="http://searchsecurity.techtarget.com/tip/1,289483,sid14_gci968784,00.html">2 エレメント認証</a> を参照してください｡<li>いくつかの 2 エレメント認証の失敗の詳細は、<a href="http://www.schneier.com/essay-083.html">2 エレメント認証:少なすぎ、遅すぎ</a> を参照してください｡</li></li></li>
  </ul>
  <h1>関連する項目</h1>
  <ul>
  </ul>
  <hr />
  <p>出典: Microsoft Patterns &amp; Practices ガイダンス </p>]]></Data>
  </Content>
</TeamMentor_Article>